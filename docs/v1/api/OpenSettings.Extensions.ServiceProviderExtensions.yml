### YamlMime:ManagedReference
items:
- uid: OpenSettings.Extensions.ServiceProviderExtensions
  commentId: T:OpenSettings.Extensions.ServiceProviderExtensions
  id: ServiceProviderExtensions
  parent: OpenSettings.Extensions
  children:
  - OpenSettings.Extensions.ServiceProviderExtensions.UseOpenSettings(System.IServiceProvider)
  langs:
  - csharp
  - vb
  name: ServiceProviderExtensions
  nameWithType: ServiceProviderExtensions
  fullName: OpenSettings.Extensions.ServiceProviderExtensions
  type: Class
  source:
    remote:
      path: src/OpenSettings/Extensions/ServiceProviderExtensions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: ServiceProviderExtensions
    path: ../../../open-settings/src/OpenSettings/Extensions/ServiceProviderExtensions.cs
    startLine: 21
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Extensions
  summary: >-
    Provides extension methods for <xref href="System.IServiceProvider" data-throw-if-not-resolved="false"></xref> to facilitate managing instance status

    during application startup and shutdown.

    <p>

    This class includes the <xref href="OpenSettings.Extensions.ServiceProviderExtensions.UseOpenSettings(System.IServiceProvider)" data-throw-if-not-resolved="false"></xref> method that helps update the status of the instance

    when the application starts and stops. It's primarily designed for non-ASP.NET applications. 

    For ASP.NET applications, it is recommended to use the corresponding extension method specific to <code>IApplicationBuilder</code> for managing application startup and shutdown.

    </p>
  example: []
  syntax:
    content: public static class ServiceProviderExtensions
    content.vb: Public Module ServiceProviderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpenSettings.Extensions.ServiceProviderExtensions.UseOpenSettings(System.IServiceProvider)
  commentId: M:OpenSettings.Extensions.ServiceProviderExtensions.UseOpenSettings(System.IServiceProvider)
  id: UseOpenSettings(System.IServiceProvider)
  isExtensionMethod: true
  parent: OpenSettings.Extensions.ServiceProviderExtensions
  langs:
  - csharp
  - vb
  name: UseOpenSettings(IServiceProvider)
  nameWithType: ServiceProviderExtensions.UseOpenSettings(IServiceProvider)
  fullName: OpenSettings.Extensions.ServiceProviderExtensions.UseOpenSettings(System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/OpenSettings/Extensions/ServiceProviderExtensions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: UseOpenSettings
    path: ../../../open-settings/src/OpenSettings/Extensions/ServiceProviderExtensions.cs
    startLine: 33
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Extensions
  summary: >-
    Updates the instance status during application startup and shutdown.

    <p>

    This method is for non-ASP.NET applications. For ASP.NET, use an <code>IApplicationBuilder</code>-based extension instead.

    </p>

    <p>

    Registers actions to mark the instance as active on startup and inactive on shutdown.

    </p>
  example: []
  syntax:
    content: public static void UseOpenSettings(this IServiceProvider serviceProvider)
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: The <xref href="System.IServiceProvider" data-throw-if-not-resolved="false"></xref> to resolve services for updating the instance status.
    content.vb: Public Shared Sub UseOpenSettings(serviceProvider As IServiceProvider)
  overload: OpenSettings.Extensions.ServiceProviderExtensions.UseOpenSettings*
references:
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: OpenSettings.Extensions.ServiceProviderExtensions.UseOpenSettings(System.IServiceProvider)
  commentId: M:OpenSettings.Extensions.ServiceProviderExtensions.UseOpenSettings(System.IServiceProvider)
  isExternal: true
  href: OpenSettings.Extensions.ServiceProviderExtensions.html#OpenSettings_Extensions_ServiceProviderExtensions_UseOpenSettings_System_IServiceProvider_
  name: UseOpenSettings(IServiceProvider)
  nameWithType: ServiceProviderExtensions.UseOpenSettings(IServiceProvider)
  fullName: OpenSettings.Extensions.ServiceProviderExtensions.UseOpenSettings(System.IServiceProvider)
  spec.csharp:
  - uid: OpenSettings.Extensions.ServiceProviderExtensions.UseOpenSettings(System.IServiceProvider)
    name: UseOpenSettings
    href: OpenSettings.Extensions.ServiceProviderExtensions.html#OpenSettings_Extensions_ServiceProviderExtensions_UseOpenSettings_System_IServiceProvider_
  - name: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: )
  spec.vb:
  - uid: OpenSettings.Extensions.ServiceProviderExtensions.UseOpenSettings(System.IServiceProvider)
    name: UseOpenSettings
    href: OpenSettings.Extensions.ServiceProviderExtensions.html#OpenSettings_Extensions_ServiceProviderExtensions_UseOpenSettings_System_IServiceProvider_
  - name: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: )
- uid: OpenSettings.Extensions
  commentId: N:OpenSettings.Extensions
  href: OpenSettings.html
  name: OpenSettings.Extensions
  nameWithType: OpenSettings.Extensions
  fullName: OpenSettings.Extensions
  spec.csharp:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Extensions
    name: Extensions
    href: OpenSettings.Extensions.html
  spec.vb:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Extensions
    name: Extensions
    href: OpenSettings.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OpenSettings.Extensions.ServiceProviderExtensions.UseOpenSettings*
  commentId: Overload:OpenSettings.Extensions.ServiceProviderExtensions.UseOpenSettings
  href: OpenSettings.Extensions.ServiceProviderExtensions.html#OpenSettings_Extensions_ServiceProviderExtensions_UseOpenSettings_System_IServiceProvider_
  name: UseOpenSettings
  nameWithType: ServiceProviderExtensions.UseOpenSettings
  fullName: OpenSettings.Extensions.ServiceProviderExtensions.UseOpenSettings
