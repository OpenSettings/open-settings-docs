### YamlMime:ManagedReference
items:
- uid: OpenSettings.Extensions.ConfigurationBuilderExtensions
  commentId: T:OpenSettings.Extensions.ConfigurationBuilderExtensions
  id: ConfigurationBuilderExtensions
  parent: OpenSettings.Extensions
  children:
  - OpenSettings.Extensions.ConfigurationBuilderExtensions.BuildSettingsAsync(Microsoft.Extensions.Configuration.ConfigurationBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.String,System.Threading.CancellationToken,System.Type[])
  - OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault(Microsoft.Extensions.Configuration.IConfiguration,System.Type)
  - OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault``1(Microsoft.Extensions.Configuration.IConfiguration)
  langs:
  - csharp
  - vb
  name: ConfigurationBuilderExtensions
  nameWithType: ConfigurationBuilderExtensions
  fullName: OpenSettings.Extensions.ConfigurationBuilderExtensions
  type: Class
  source:
    remote:
      path: src/OpenSettings/Extensions/ConfigurationBuilderExtensions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: ConfigurationBuilderExtensions
    path: ../../../open-settings/src/OpenSettings/Extensions/ConfigurationBuilderExtensions.cs
    startLine: 32
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Extensions
  summary: >-
    Provides extension methods for <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref> to retrieve settings from the configuration 

    and build application settings asynchronously.
  example: []
  syntax:
    content: public static class ConfigurationBuilderExtensions
    content.vb: Public Module ConfigurationBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault``1(Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault``1(Microsoft.Extensions.Configuration.IConfiguration)
  id: GetSettingOrDefault``1(Microsoft.Extensions.Configuration.IConfiguration)
  isExtensionMethod: true
  parent: OpenSettings.Extensions.ConfigurationBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetSettingOrDefault<T>(IConfiguration)
  nameWithType: ConfigurationBuilderExtensions.GetSettingOrDefault<T>(IConfiguration)
  fullName: OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault<T>(Microsoft.Extensions.Configuration.IConfiguration)
  type: Method
  source:
    remote:
      path: src/OpenSettings/Extensions/ConfigurationBuilderExtensions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: GetSettingOrDefault
    path: ../../../open-settings/src/OpenSettings/Extensions/ConfigurationBuilderExtensions.cs
    startLine: 48
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Extensions
  summary: >-
    Retrieves a setting from the configuration or returns the default value if not found.

    <p>

    The <xref href="OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault%60%601(Microsoft.Extensions.Configuration.IConfiguration)" data-throw-if-not-resolved="false"></xref> method retrieves a setting of type <code class="typeparamref">T</code> from the configuration. 

    If the setting doesn't exist, it returns the default value for the type. The type <code class="typeparamref">T</code> must implement <xref href="OpenSettings.Services.Interfaces.ISettings" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    The non-generic <xref href="OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault(Microsoft.Extensions.Configuration.IConfiguration%2cSystem.Type)" data-throw-if-not-resolved="false"></xref> method retrieves a setting by the provided <code>type</code>.

    If no setting is found, it returns <code>null</code> or the default value of the specified type.

    </p>
  example: []
  syntax:
    content: 'public static T GetSettingOrDefault<T>(this IConfiguration configuration) where T : ISettings'
    parameters:
    - id: configuration
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: The <xref href="Microsoft.Extensions.Configuration.IConfiguration" data-throw-if-not-resolved="false"></xref> used to retrieve the setting.
    typeParameters:
    - id: T
      description: The type of setting to retrieve, which must implement <xref href="OpenSettings.Services.Interfaces.ISettings" data-throw-if-not-resolved="false"></xref>.
    return:
      type: '{T}'
      description: The setting of the specified type, or the default value if not found.
    content.vb: Public Shared Function GetSettingOrDefault(Of T As ISettings)(configuration As IConfiguration) As T
  overload: OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault*
  nameWithType.vb: ConfigurationBuilderExtensions.GetSettingOrDefault(Of T)(IConfiguration)
  fullName.vb: OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault(Of T)(Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: GetSettingOrDefault(Of T)(IConfiguration)
- uid: OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault(Microsoft.Extensions.Configuration.IConfiguration,System.Type)
  commentId: M:OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault(Microsoft.Extensions.Configuration.IConfiguration,System.Type)
  id: GetSettingOrDefault(Microsoft.Extensions.Configuration.IConfiguration,System.Type)
  isExtensionMethod: true
  parent: OpenSettings.Extensions.ConfigurationBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetSettingOrDefault(IConfiguration, Type)
  nameWithType: ConfigurationBuilderExtensions.GetSettingOrDefault(IConfiguration, Type)
  fullName: OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault(Microsoft.Extensions.Configuration.IConfiguration, System.Type)
  type: Method
  source:
    remote:
      path: src/OpenSettings/Extensions/ConfigurationBuilderExtensions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: GetSettingOrDefault
    path: ../../../open-settings/src/OpenSettings/Extensions/ConfigurationBuilderExtensions.cs
    startLine: 64
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Extensions
  summary: >-
    Retrieves a setting from the configuration or returns the default value if not found.

    <p>

    Retrieves a setting of the specified <code class="paramref">type</code> from the configuration. If no setting is found, it returns <code>null</code> or the default value of the type.

    </p>
  example: []
  syntax:
    content: public static object GetSettingOrDefault(this IConfiguration configuration, Type type)
    parameters:
    - id: configuration
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: The <xref href="Microsoft.Extensions.Configuration.IConfiguration" data-throw-if-not-resolved="false"></xref> used to retrieve the setting.
    - id: type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the setting to retrieve.
    return:
      type: System.Object
      description: The setting of the specified type, or <code>null</code> if not found.
    content.vb: Public Shared Function GetSettingOrDefault(configuration As IConfiguration, type As Type) As Object
  overload: OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault*
- uid: OpenSettings.Extensions.ConfigurationBuilderExtensions.BuildSettingsAsync(Microsoft.Extensions.Configuration.ConfigurationBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.String,System.Threading.CancellationToken,System.Type[])
  commentId: M:OpenSettings.Extensions.ConfigurationBuilderExtensions.BuildSettingsAsync(Microsoft.Extensions.Configuration.ConfigurationBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.String,System.Threading.CancellationToken,System.Type[])
  id: BuildSettingsAsync(Microsoft.Extensions.Configuration.ConfigurationBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.String,System.Threading.CancellationToken,System.Type[])
  isExtensionMethod: true
  parent: OpenSettings.Extensions.ConfigurationBuilderExtensions
  langs:
  - csharp
  - vb
  name: BuildSettingsAsync(ConfigurationBuilder, OpenSettingsConfiguration, string, CancellationToken, params Type[])
  nameWithType: ConfigurationBuilderExtensions.BuildSettingsAsync(ConfigurationBuilder, OpenSettingsConfiguration, string, CancellationToken, params Type[])
  fullName: OpenSettings.Extensions.ConfigurationBuilderExtensions.BuildSettingsAsync(Microsoft.Extensions.Configuration.ConfigurationBuilder, OpenSettings.Configurations.OpenSettingsConfiguration, string, System.Threading.CancellationToken, params System.Type[])
  type: Method
  source:
    remote:
      path: src/OpenSettings/Extensions/ConfigurationBuilderExtensions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: BuildSettingsAsync
    path: ../../../open-settings/src/OpenSettings/Extensions/ConfigurationBuilderExtensions.cs
    startLine: 97
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Extensions
  summary: >-
    Builds and configures settings asynchronously for the application based on the specified service configuration.

    <p>

    The <xref href="OpenSettings.Extensions.ConfigurationBuilderExtensions.BuildSettingsAsync(Microsoft.Extensions.Configuration.ConfigurationBuilder%2cOpenSettings.Configurations.OpenSettingsConfiguration%2cSystem.String%2cSystem.Threading.CancellationToken%2cSystem.Type%5b%5d)" data-throw-if-not-resolved="false"></xref> method handles the initial setup of settings for the application, with behavior 

    changing depending on whether the settings service configuration is set to "Provider" or "Consumer". This method is 

    responsible for syncing application data, generating settings-related files, and adding them to the configuration builder.

    </p>

    <p>

    The generated settings files are made available through the <xref href="Microsoft.Extensions.Configuration.IConfiguration" data-throw-if-not-resolved="false"></xref> interface, allowing them to be 

    easily retrieved by the application. This method is typically used during application startup to ensure that settings 

    are properly loaded and integrated into the system.

    </p>

    <p>

    If the <code class="paramref">settingsTypes</code> parameter is specified, only the types inherited from <xref href="OpenSettings.Services.Interfaces.ISettings" data-throw-if-not-resolved="false"></xref> will 

    be treated as settings and managed by the OpenSettings. If no types are provided or if the parameter is <code>null</code>, the library 

    uses reflection to identify and manage all classes inherited from <xref href="OpenSettings.Services.Interfaces.ISettings" data-throw-if-not-resolved="false"></xref> within the current assembly.

    </p>

    <p>

    This method is asynchronous and supports cancellation via a <code class="paramref">cancellationToken</code>. It also accepts optional 

    parameters such as a logger, environment name, and a list of settings types to be configured.

    </p>
  example: []
  syntax:
    content: public static Task<IConfigurationBuilder> BuildSettingsAsync(this ConfigurationBuilder configurationBuilder, OpenSettingsConfiguration openSettingsConfiguration, string environmentName = null, CancellationToken cancellationToken = default, params Type[] settingsTypes)
    parameters:
    - id: configurationBuilder
      type: Microsoft.Extensions.Configuration.ConfigurationBuilder
      description: The configuration builder used to add the settings to the application's configuration.
    - id: openSettingsConfiguration
      type: OpenSettings.Configurations.OpenSettingsConfiguration
      description: The settings service configuration determining the behavior (Provider or Consumer).
    - id: environmentName
      type: System.String
      description: An optional environment name to customize settings per environment.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token to allow cancelling the operation if needed.
    - id: settingsTypes
      type: System.Type[]
      description: The types of settings to build and configure. Only classes inheriting from <xref href="OpenSettings.Services.Interfaces.ISettings" data-throw-if-not-resolved="false"></xref> will be treated as settings.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Extensions.Configuration.IConfigurationBuilder}
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function BuildSettingsAsync(configurationBuilder As ConfigurationBuilder, openSettingsConfiguration As OpenSettingsConfiguration, environmentName As String = Nothing, cancellationToken As CancellationToken = Nothing, ParamArray settingsTypes As Type()) As Task(Of IConfigurationBuilder)
  overload: OpenSettings.Extensions.ConfigurationBuilderExtensions.BuildSettingsAsync*
  nameWithType.vb: ConfigurationBuilderExtensions.BuildSettingsAsync(ConfigurationBuilder, OpenSettingsConfiguration, String, CancellationToken, ParamArray Type())
  fullName.vb: OpenSettings.Extensions.ConfigurationBuilderExtensions.BuildSettingsAsync(Microsoft.Extensions.Configuration.ConfigurationBuilder, OpenSettings.Configurations.OpenSettingsConfiguration, String, System.Threading.CancellationToken, ParamArray System.Type())
  name.vb: BuildSettingsAsync(ConfigurationBuilder, OpenSettingsConfiguration, String, CancellationToken, ParamArray Type())
references:
- uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationBuilder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfigurationbuilder
  name: IConfigurationBuilder
  nameWithType: IConfigurationBuilder
  fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder
- uid: OpenSettings.Extensions
  commentId: N:OpenSettings.Extensions
  href: OpenSettings.html
  name: OpenSettings.Extensions
  nameWithType: OpenSettings.Extensions
  fullName: OpenSettings.Extensions
  spec.csharp:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Extensions
    name: Extensions
    href: OpenSettings.Extensions.html
  spec.vb:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Extensions
    name: Extensions
    href: OpenSettings.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault``1(Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault``1(Microsoft.Extensions.Configuration.IConfiguration)
  isExternal: true
  href: OpenSettings.Extensions.ConfigurationBuilderExtensions.html#OpenSettings_Extensions_ConfigurationBuilderExtensions_GetSettingOrDefault__1_Microsoft_Extensions_Configuration_IConfiguration_
  name: GetSettingOrDefault<T>(IConfiguration)
  nameWithType: ConfigurationBuilderExtensions.GetSettingOrDefault<T>(IConfiguration)
  fullName: OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault<T>(Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType.vb: ConfigurationBuilderExtensions.GetSettingOrDefault(Of T)(IConfiguration)
  fullName.vb: OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault(Of T)(Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: GetSettingOrDefault(Of T)(IConfiguration)
  spec.csharp:
  - uid: OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault``1(Microsoft.Extensions.Configuration.IConfiguration)
    name: GetSettingOrDefault
    href: OpenSettings.Extensions.ConfigurationBuilderExtensions.html#OpenSettings_Extensions_ConfigurationBuilderExtensions_GetSettingOrDefault__1_Microsoft_Extensions_Configuration_IConfiguration_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfiguration
  - name: )
  spec.vb:
  - uid: OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault``1(Microsoft.Extensions.Configuration.IConfiguration)
    name: GetSettingOrDefault
    href: OpenSettings.Extensions.ConfigurationBuilderExtensions.html#OpenSettings_Extensions_ConfigurationBuilderExtensions_GetSettingOrDefault__1_Microsoft_Extensions_Configuration_IConfiguration_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfiguration
  - name: )
- uid: OpenSettings.Services.Interfaces.ISettings
  commentId: T:OpenSettings.Services.Interfaces.ISettings
  parent: OpenSettings.Services.Interfaces
  href: OpenSettings.Services.Interfaces.ISettings.html
  name: ISettings
  nameWithType: ISettings
  fullName: OpenSettings.Services.Interfaces.ISettings
- uid: OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault(Microsoft.Extensions.Configuration.IConfiguration,System.Type)
  commentId: M:OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault(Microsoft.Extensions.Configuration.IConfiguration,System.Type)
  isExternal: true
  href: OpenSettings.Extensions.ConfigurationBuilderExtensions.html#OpenSettings_Extensions_ConfigurationBuilderExtensions_GetSettingOrDefault_Microsoft_Extensions_Configuration_IConfiguration_System_Type_
  name: GetSettingOrDefault(IConfiguration, Type)
  nameWithType: ConfigurationBuilderExtensions.GetSettingOrDefault(IConfiguration, Type)
  fullName: OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault(Microsoft.Extensions.Configuration.IConfiguration, System.Type)
  spec.csharp:
  - uid: OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault(Microsoft.Extensions.Configuration.IConfiguration,System.Type)
    name: GetSettingOrDefault
    href: OpenSettings.Extensions.ConfigurationBuilderExtensions.html#OpenSettings_Extensions_ConfigurationBuilderExtensions_GetSettingOrDefault_Microsoft_Extensions_Configuration_IConfiguration_System_Type_
  - name: (
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfiguration
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault(Microsoft.Extensions.Configuration.IConfiguration,System.Type)
    name: GetSettingOrDefault
    href: OpenSettings.Extensions.ConfigurationBuilderExtensions.html#OpenSettings_Extensions_ConfigurationBuilderExtensions_GetSettingOrDefault_Microsoft_Extensions_Configuration_IConfiguration_System_Type_
  - name: (
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfiguration
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfiguration
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault*
  commentId: Overload:OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault
  href: OpenSettings.Extensions.ConfigurationBuilderExtensions.html#OpenSettings_Extensions_ConfigurationBuilderExtensions_GetSettingOrDefault__1_Microsoft_Extensions_Configuration_IConfiguration_
  name: GetSettingOrDefault
  nameWithType: ConfigurationBuilderExtensions.GetSettingOrDefault
  fullName: OpenSettings.Extensions.ConfigurationBuilderExtensions.GetSettingOrDefault
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: OpenSettings.Services.Interfaces
  commentId: N:OpenSettings.Services.Interfaces
  href: OpenSettings.html
  name: OpenSettings.Services.Interfaces
  nameWithType: OpenSettings.Services.Interfaces
  fullName: OpenSettings.Services.Interfaces
  spec.csharp:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Services
    name: Services
    href: OpenSettings.Services.html
  - name: .
  - uid: OpenSettings.Services.Interfaces
    name: Interfaces
    href: OpenSettings.Services.Interfaces.html
  spec.vb:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Services
    name: Services
    href: OpenSettings.Services.html
  - name: .
  - uid: OpenSettings.Services.Interfaces
    name: Interfaces
    href: OpenSettings.Services.Interfaces.html
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Configuration
    name: Configuration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Configuration
    name: Configuration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: OpenSettings.Extensions.ConfigurationBuilderExtensions.BuildSettingsAsync(Microsoft.Extensions.Configuration.ConfigurationBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.String,System.Threading.CancellationToken,System.Type[])
  commentId: M:OpenSettings.Extensions.ConfigurationBuilderExtensions.BuildSettingsAsync(Microsoft.Extensions.Configuration.ConfigurationBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.String,System.Threading.CancellationToken,System.Type[])
  isExternal: true
  href: OpenSettings.Extensions.ConfigurationBuilderExtensions.html#OpenSettings_Extensions_ConfigurationBuilderExtensions_BuildSettingsAsync_Microsoft_Extensions_Configuration_ConfigurationBuilder_OpenSettings_Configurations_OpenSettingsConfiguration_System_String_System_Threading_CancellationToken_System_Type___
  name: BuildSettingsAsync(ConfigurationBuilder, OpenSettingsConfiguration, string, CancellationToken, params Type[])
  nameWithType: ConfigurationBuilderExtensions.BuildSettingsAsync(ConfigurationBuilder, OpenSettingsConfiguration, string, CancellationToken, params Type[])
  fullName: OpenSettings.Extensions.ConfigurationBuilderExtensions.BuildSettingsAsync(Microsoft.Extensions.Configuration.ConfigurationBuilder, OpenSettings.Configurations.OpenSettingsConfiguration, string, System.Threading.CancellationToken, params System.Type[])
  nameWithType.vb: ConfigurationBuilderExtensions.BuildSettingsAsync(ConfigurationBuilder, OpenSettingsConfiguration, String, CancellationToken, ParamArray Type())
  fullName.vb: OpenSettings.Extensions.ConfigurationBuilderExtensions.BuildSettingsAsync(Microsoft.Extensions.Configuration.ConfigurationBuilder, OpenSettings.Configurations.OpenSettingsConfiguration, String, System.Threading.CancellationToken, ParamArray System.Type())
  name.vb: BuildSettingsAsync(ConfigurationBuilder, OpenSettingsConfiguration, String, CancellationToken, ParamArray Type())
  spec.csharp:
  - uid: OpenSettings.Extensions.ConfigurationBuilderExtensions.BuildSettingsAsync(Microsoft.Extensions.Configuration.ConfigurationBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.String,System.Threading.CancellationToken,System.Type[])
    name: BuildSettingsAsync
    href: OpenSettings.Extensions.ConfigurationBuilderExtensions.html#OpenSettings_Extensions_ConfigurationBuilderExtensions_BuildSettingsAsync_Microsoft_Extensions_Configuration_ConfigurationBuilder_OpenSettings_Configurations_OpenSettingsConfiguration_System_String_System_Threading_CancellationToken_System_Type___
  - name: (
  - uid: Microsoft.Extensions.Configuration.ConfigurationBuilder
    name: ConfigurationBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.configurationbuilder
  - name: ','
  - name: " "
  - uid: OpenSettings.Configurations.OpenSettingsConfiguration
    name: OpenSettingsConfiguration
    href: OpenSettings.Configurations.OpenSettingsConfiguration.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: OpenSettings.Extensions.ConfigurationBuilderExtensions.BuildSettingsAsync(Microsoft.Extensions.Configuration.ConfigurationBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.String,System.Threading.CancellationToken,System.Type[])
    name: BuildSettingsAsync
    href: OpenSettings.Extensions.ConfigurationBuilderExtensions.html#OpenSettings_Extensions_ConfigurationBuilderExtensions_BuildSettingsAsync_Microsoft_Extensions_Configuration_ConfigurationBuilder_OpenSettings_Configurations_OpenSettingsConfiguration_System_String_System_Threading_CancellationToken_System_Type___
  - name: (
  - uid: Microsoft.Extensions.Configuration.ConfigurationBuilder
    name: ConfigurationBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.configurationbuilder
  - name: ','
  - name: " "
  - uid: OpenSettings.Configurations.OpenSettingsConfiguration
    name: OpenSettingsConfiguration
    href: OpenSettings.Configurations.OpenSettingsConfiguration.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
  - name: )
- uid: OpenSettings.Extensions.ConfigurationBuilderExtensions.BuildSettingsAsync*
  commentId: Overload:OpenSettings.Extensions.ConfigurationBuilderExtensions.BuildSettingsAsync
  href: OpenSettings.Extensions.ConfigurationBuilderExtensions.html#OpenSettings_Extensions_ConfigurationBuilderExtensions_BuildSettingsAsync_Microsoft_Extensions_Configuration_ConfigurationBuilder_OpenSettings_Configurations_OpenSettingsConfiguration_System_String_System_Threading_CancellationToken_System_Type___
  name: BuildSettingsAsync
  nameWithType: ConfigurationBuilderExtensions.BuildSettingsAsync
  fullName: OpenSettings.Extensions.ConfigurationBuilderExtensions.BuildSettingsAsync
- uid: Microsoft.Extensions.Configuration.ConfigurationBuilder
  commentId: T:Microsoft.Extensions.Configuration.ConfigurationBuilder
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.configurationbuilder
  name: ConfigurationBuilder
  nameWithType: ConfigurationBuilder
  fullName: Microsoft.Extensions.Configuration.ConfigurationBuilder
- uid: OpenSettings.Configurations.OpenSettingsConfiguration
  commentId: T:OpenSettings.Configurations.OpenSettingsConfiguration
  parent: OpenSettings.Configurations
  href: OpenSettings.Configurations.OpenSettingsConfiguration.html
  name: OpenSettingsConfiguration
  nameWithType: OpenSettingsConfiguration
  fullName: OpenSettings.Configurations.OpenSettingsConfiguration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Type[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{Microsoft.Extensions.Configuration.IConfigurationBuilder}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Extensions.Configuration.IConfigurationBuilder}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IConfigurationBuilder>
  nameWithType: Task<IConfigurationBuilder>
  fullName: System.Threading.Tasks.Task<Microsoft.Extensions.Configuration.IConfigurationBuilder>
  nameWithType.vb: Task(Of IConfigurationBuilder)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Extensions.Configuration.IConfigurationBuilder)
  name.vb: Task(Of IConfigurationBuilder)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
    name: IConfigurationBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfigurationbuilder
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
    name: IConfigurationBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfigurationbuilder
  - name: )
- uid: OpenSettings.Configurations
  commentId: N:OpenSettings.Configurations
  href: OpenSettings.html
  name: OpenSettings.Configurations
  nameWithType: OpenSettings.Configurations
  fullName: OpenSettings.Configurations
  spec.csharp:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Configurations
    name: Configurations
    href: OpenSettings.Configurations.html
  spec.vb:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Configurations
    name: Configurations
    href: OpenSettings.Configurations.html
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
