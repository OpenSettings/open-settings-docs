### YamlMime:ManagedReference
items:
- uid: OpenSettings.Configurations.ControllerConfiguration
  commentId: T:OpenSettings.Configurations.ControllerConfiguration
  id: ControllerConfiguration
  parent: OpenSettings.Configurations
  children:
  - OpenSettings.Configurations.ControllerConfiguration.#ctor
  - OpenSettings.Configurations.ControllerConfiguration.AllowFromExploring
  - OpenSettings.Configurations.ControllerConfiguration.Authorize
  - OpenSettings.Configurations.ControllerConfiguration.OAuth2
  - OpenSettings.Configurations.ControllerConfiguration.Route
  langs:
  - csharp
  - vb
  name: ControllerConfiguration
  nameWithType: ControllerConfiguration
  fullName: OpenSettings.Configurations.ControllerConfiguration
  type: Class
  source:
    remote:
      path: src/OpenSettings/Configurations/ControllerConfiguration.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: ControllerConfiguration
    path: ../../../open-settings/src/OpenSettings/Configurations/ControllerConfiguration.cs
    startLine: 5
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Configurations
  summary: Configuration options for the settings controller, including route, authorization and Api visibility.
  example: []
  syntax:
    content: public class ControllerConfiguration
    content.vb: Public Class ControllerConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpenSettings.Configurations.ControllerConfiguration.#ctor
  commentId: M:OpenSettings.Configurations.ControllerConfiguration.#ctor
  id: '#ctor'
  parent: OpenSettings.Configurations.ControllerConfiguration
  langs:
  - csharp
  - vb
  name: ControllerConfiguration()
  nameWithType: ControllerConfiguration.ControllerConfiguration()
  fullName: OpenSettings.Configurations.ControllerConfiguration.ControllerConfiguration()
  type: Constructor
  source:
    remote:
      path: src/OpenSettings/Configurations/ControllerConfiguration.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: .ctor
    path: ../../../open-settings/src/OpenSettings/Configurations/ControllerConfiguration.cs
    startLine: 12
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Configurations
  summary: Initializes a new instance of the <xref href="OpenSettings.Configurations.ControllerConfiguration" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public ControllerConfiguration()
    content.vb: Public Sub New()
  overload: OpenSettings.Configurations.ControllerConfiguration.#ctor*
  nameWithType.vb: ControllerConfiguration.New()
  fullName.vb: OpenSettings.Configurations.ControllerConfiguration.New()
  name.vb: New()
- uid: OpenSettings.Configurations.ControllerConfiguration.Route
  commentId: P:OpenSettings.Configurations.ControllerConfiguration.Route
  id: Route
  parent: OpenSettings.Configurations.ControllerConfiguration
  langs:
  - csharp
  - vb
  name: Route
  nameWithType: ControllerConfiguration.Route
  fullName: OpenSettings.Configurations.ControllerConfiguration.Route
  type: Property
  source:
    remote:
      path: src/OpenSettings/Configurations/ControllerConfiguration.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: Route
    path: ../../../open-settings/src/OpenSettings/Configurations/ControllerConfiguration.cs
    startLine: 18
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Configurations
  summary: >-
    Gets or sets the base route for the service controller's endpoints.

    Default is "<code>api/settings</code>". Trailing and leading slashes are trimmed if present.
  example: []
  syntax:
    content: public string Route { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Route As String
  overload: OpenSettings.Configurations.ControllerConfiguration.Route*
- uid: OpenSettings.Configurations.ControllerConfiguration.AllowFromExploring
  commentId: P:OpenSettings.Configurations.ControllerConfiguration.AllowFromExploring
  id: AllowFromExploring
  parent: OpenSettings.Configurations.ControllerConfiguration
  langs:
  - csharp
  - vb
  name: AllowFromExploring
  nameWithType: ControllerConfiguration.AllowFromExploring
  fullName: OpenSettings.Configurations.ControllerConfiguration.AllowFromExploring
  type: Property
  source:
    remote:
      path: src/OpenSettings/Configurations/ControllerConfiguration.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: AllowFromExploring
    path: ../../../open-settings/src/OpenSettings/Configurations/ControllerConfiguration.cs
    startLine: 29
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Configurations
  summary: >-
    Specifies whether the open settings controller's endpoints should be exposed in

    Api documentation (e.g., for Swagger or other Api explorers).

    <p>The default value is '<code>false</code>'.</p>
  example: []
  syntax:
    content: public bool AllowFromExploring { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowFromExploring As Boolean
  overload: OpenSettings.Configurations.ControllerConfiguration.AllowFromExploring*
- uid: OpenSettings.Configurations.ControllerConfiguration.Authorize
  commentId: P:OpenSettings.Configurations.ControllerConfiguration.Authorize
  id: Authorize
  parent: OpenSettings.Configurations.ControllerConfiguration
  langs:
  - csharp
  - vb
  name: Authorize
  nameWithType: ControllerConfiguration.Authorize
  fullName: OpenSettings.Configurations.ControllerConfiguration.Authorize
  type: Property
  source:
    remote:
      path: src/OpenSettings/Configurations/ControllerConfiguration.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: Authorize
    path: ../../../open-settings/src/OpenSettings/Configurations/ControllerConfiguration.cs
    startLine: 40
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Configurations
  summary: >-
    Indicates whether the controller requires authentication for access.  

    <p>When set to true, authentication is enforced.</p>

    <p>

    When set to false, the controller is accessible without authentication unless the service type is Consumer,  

    in which case the provider's authorization settings take precedence, and authentication may still be required.

    </p>

    <p>The default value is '<code>false</code>'.</p>
  example: []
  syntax:
    content: public bool Authorize { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Authorize As Boolean
  overload: OpenSettings.Configurations.ControllerConfiguration.Authorize*
- uid: OpenSettings.Configurations.ControllerConfiguration.OAuth2
  commentId: P:OpenSettings.Configurations.ControllerConfiguration.OAuth2
  id: OAuth2
  parent: OpenSettings.Configurations.ControllerConfiguration
  langs:
  - csharp
  - vb
  name: OAuth2
  nameWithType: ControllerConfiguration.OAuth2
  fullName: OpenSettings.Configurations.ControllerConfiguration.OAuth2
  type: Property
  source:
    remote:
      path: src/OpenSettings/Configurations/ControllerConfiguration.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: OAuth2
    path: ../../../open-settings/src/OpenSettings/Configurations/ControllerConfiguration.cs
    startLine: 46
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Configurations
  summary: >-
    Gets or sets OAuth2 configuration for the open settings controller, allowing for 

    more detailed configuration of authentication and authorization using OAuth2.
  example: []
  syntax:
    content: public OAuth2Configuration OAuth2 { get; set; }
    parameters: []
    return:
      type: OpenSettings.Configurations.OAuth2Configuration
    content.vb: Public Property OAuth2 As OAuth2Configuration
  overload: OpenSettings.Configurations.ControllerConfiguration.OAuth2*
references:
- uid: OpenSettings.Configurations
  commentId: N:OpenSettings.Configurations
  href: OpenSettings.html
  name: OpenSettings.Configurations
  nameWithType: OpenSettings.Configurations
  fullName: OpenSettings.Configurations
  spec.csharp:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Configurations
    name: Configurations
    href: OpenSettings.Configurations.html
  spec.vb:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Configurations
    name: Configurations
    href: OpenSettings.Configurations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OpenSettings.Configurations.ControllerConfiguration
  commentId: T:OpenSettings.Configurations.ControllerConfiguration
  parent: OpenSettings.Configurations
  href: OpenSettings.Configurations.ControllerConfiguration.html
  name: ControllerConfiguration
  nameWithType: ControllerConfiguration
  fullName: OpenSettings.Configurations.ControllerConfiguration
- uid: OpenSettings.Configurations.ControllerConfiguration.#ctor*
  commentId: Overload:OpenSettings.Configurations.ControllerConfiguration.#ctor
  href: OpenSettings.Configurations.ControllerConfiguration.html#OpenSettings_Configurations_ControllerConfiguration__ctor
  name: ControllerConfiguration
  nameWithType: ControllerConfiguration.ControllerConfiguration
  fullName: OpenSettings.Configurations.ControllerConfiguration.ControllerConfiguration
  nameWithType.vb: ControllerConfiguration.New
  fullName.vb: OpenSettings.Configurations.ControllerConfiguration.New
  name.vb: New
- uid: OpenSettings.Configurations.ControllerConfiguration.Route*
  commentId: Overload:OpenSettings.Configurations.ControllerConfiguration.Route
  href: OpenSettings.Configurations.ControllerConfiguration.html#OpenSettings_Configurations_ControllerConfiguration_Route
  name: Route
  nameWithType: ControllerConfiguration.Route
  fullName: OpenSettings.Configurations.ControllerConfiguration.Route
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: OpenSettings.Configurations.ControllerConfiguration.AllowFromExploring*
  commentId: Overload:OpenSettings.Configurations.ControllerConfiguration.AllowFromExploring
  href: OpenSettings.Configurations.ControllerConfiguration.html#OpenSettings_Configurations_ControllerConfiguration_AllowFromExploring
  name: AllowFromExploring
  nameWithType: ControllerConfiguration.AllowFromExploring
  fullName: OpenSettings.Configurations.ControllerConfiguration.AllowFromExploring
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenSettings.Configurations.ControllerConfiguration.Authorize*
  commentId: Overload:OpenSettings.Configurations.ControllerConfiguration.Authorize
  href: OpenSettings.Configurations.ControllerConfiguration.html#OpenSettings_Configurations_ControllerConfiguration_Authorize
  name: Authorize
  nameWithType: ControllerConfiguration.Authorize
  fullName: OpenSettings.Configurations.ControllerConfiguration.Authorize
- uid: OpenSettings.Configurations.ControllerConfiguration.OAuth2*
  commentId: Overload:OpenSettings.Configurations.ControllerConfiguration.OAuth2
  href: OpenSettings.Configurations.ControllerConfiguration.html#OpenSettings_Configurations_ControllerConfiguration_OAuth2
  name: OAuth2
  nameWithType: ControllerConfiguration.OAuth2
  fullName: OpenSettings.Configurations.ControllerConfiguration.OAuth2
- uid: OpenSettings.Configurations.OAuth2Configuration
  commentId: T:OpenSettings.Configurations.OAuth2Configuration
  parent: OpenSettings.Configurations
  href: OpenSettings.Configurations.OAuth2Configuration.html
  name: OAuth2Configuration
  nameWithType: OAuth2Configuration
  fullName: OpenSettings.Configurations.OAuth2Configuration
