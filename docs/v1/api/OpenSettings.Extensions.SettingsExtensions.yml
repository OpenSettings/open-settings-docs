### YamlMime:ManagedReference
items:
- uid: OpenSettings.Extensions.SettingsExtensions
  commentId: T:OpenSettings.Extensions.SettingsExtensions
  id: SettingsExtensions
  parent: OpenSettings.Extensions
  children:
  - OpenSettings.Extensions.SettingsExtensions.GetLocalSettingOrDefault(OpenSettings.Services.Interfaces.ISettings)
  - OpenSettings.Extensions.SettingsExtensions.GetLocalSettingOrDefault``1(OpenSettings.Services.Interfaces.ISettings)
  - OpenSettings.Extensions.SettingsExtensions.GetRegistrationMode(OpenSettings.Services.Interfaces.ISettings)
  langs:
  - csharp
  - vb
  name: SettingsExtensions
  nameWithType: SettingsExtensions
  fullName: OpenSettings.Extensions.SettingsExtensions
  type: Class
  source:
    remote:
      path: src/OpenSettings/Extensions/SettingsExtensions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: SettingsExtensions
    path: ../../../open-settings/src/OpenSettings/Extensions/SettingsExtensions.cs
    startLine: 9
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Extensions
  summary: Provides extension methods for <xref href="OpenSettings.Services.Interfaces.ISettings" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static class SettingsExtensions
    content.vb: Public Module SettingsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpenSettings.Extensions.SettingsExtensions.GetRegistrationMode(OpenSettings.Services.Interfaces.ISettings)
  commentId: M:OpenSettings.Extensions.SettingsExtensions.GetRegistrationMode(OpenSettings.Services.Interfaces.ISettings)
  id: GetRegistrationMode(OpenSettings.Services.Interfaces.ISettings)
  isExtensionMethod: true
  parent: OpenSettings.Extensions.SettingsExtensions
  langs:
  - csharp
  - vb
  name: GetRegistrationMode(ISettings)
  nameWithType: SettingsExtensions.GetRegistrationMode(ISettings)
  fullName: OpenSettings.Extensions.SettingsExtensions.GetRegistrationMode(OpenSettings.Services.Interfaces.ISettings)
  type: Method
  source:
    remote:
      path: src/OpenSettings/Extensions/SettingsExtensions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: GetRegistrationMode
    path: ../../../open-settings/src/OpenSettings/Extensions/SettingsExtensions.cs
    startLine: 21
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Extensions
  summary: >-
    Gets the registration mode associated with the specified <xref href="OpenSettings.Services.Interfaces.ISettings" data-throw-if-not-resolved="false"></xref> object.

    If the registration mode is found, it is returned; otherwise, <code>null</code> is returned.
  example: []
  syntax:
    content: public static RegistrationMode? GetRegistrationMode(this ISettings setting)
    parameters:
    - id: setting
      type: OpenSettings.Services.Interfaces.ISettings
      description: The settings object for which the registration mode is to be retrieved.
    return:
      type: System.Nullable{OpenSettings.Models.RegistrationMode}
      description: >-
        A nullable <xref href="OpenSettings.Models.RegistrationMode" data-throw-if-not-resolved="false"></xref> indicating the registration mode of the setting,

        or <code>null</code> if not found.
    content.vb: Public Shared Function GetRegistrationMode(setting As ISettings) As RegistrationMode?
  overload: OpenSettings.Extensions.SettingsExtensions.GetRegistrationMode*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: Thrown if <param name="setting" /> null.
- uid: OpenSettings.Extensions.SettingsExtensions.GetLocalSettingOrDefault(OpenSettings.Services.Interfaces.ISettings)
  commentId: M:OpenSettings.Extensions.SettingsExtensions.GetLocalSettingOrDefault(OpenSettings.Services.Interfaces.ISettings)
  id: GetLocalSettingOrDefault(OpenSettings.Services.Interfaces.ISettings)
  isExtensionMethod: true
  parent: OpenSettings.Extensions.SettingsExtensions
  langs:
  - csharp
  - vb
  name: GetLocalSettingOrDefault(ISettings)
  nameWithType: SettingsExtensions.GetLocalSettingOrDefault(ISettings)
  fullName: OpenSettings.Extensions.SettingsExtensions.GetLocalSettingOrDefault(OpenSettings.Services.Interfaces.ISettings)
  type: Method
  source:
    remote:
      path: src/OpenSettings/Extensions/SettingsExtensions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: GetLocalSettingOrDefault
    path: ../../../open-settings/src/OpenSettings/Extensions/SettingsExtensions.cs
    startLine: 35
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Extensions
  summary: >-
    Gets the local setting data associated with the specified <xref href="OpenSettings.Services.Interfaces.ISettings" data-throw-if-not-resolved="false"></xref> object.

    If local setting data is found, it is returned; otherwise, <code>null</code> is returned.
  example: []
  syntax:
    content: public static object GetLocalSettingOrDefault(this ISettings setting)
    parameters:
    - id: setting
      type: OpenSettings.Services.Interfaces.ISettings
      description: The settings object for which the local setting data is to be retrieved.
    return:
      type: System.Object
      description: The local setting data associated with the setting object, or <code>null</code> if no data is found.
    content.vb: Public Shared Function GetLocalSettingOrDefault(setting As ISettings) As Object
  overload: OpenSettings.Extensions.SettingsExtensions.GetLocalSettingOrDefault*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: Thrown if <param name="setting" /> null.
- uid: OpenSettings.Extensions.SettingsExtensions.GetLocalSettingOrDefault``1(OpenSettings.Services.Interfaces.ISettings)
  commentId: M:OpenSettings.Extensions.SettingsExtensions.GetLocalSettingOrDefault``1(OpenSettings.Services.Interfaces.ISettings)
  id: GetLocalSettingOrDefault``1(OpenSettings.Services.Interfaces.ISettings)
  isExtensionMethod: true
  parent: OpenSettings.Extensions.SettingsExtensions
  langs:
  - csharp
  - vb
  name: GetLocalSettingOrDefault<T>(ISettings)
  nameWithType: SettingsExtensions.GetLocalSettingOrDefault<T>(ISettings)
  fullName: OpenSettings.Extensions.SettingsExtensions.GetLocalSettingOrDefault<T>(OpenSettings.Services.Interfaces.ISettings)
  type: Method
  source:
    remote:
      path: src/OpenSettings/Extensions/SettingsExtensions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: GetLocalSettingOrDefault
    path: ../../../open-settings/src/OpenSettings/Extensions/SettingsExtensions.cs
    startLine: 52
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Extensions
  summary: >-
    Gets the local setting data associated with the specified <xref href="OpenSettings.Services.Interfaces.ISettings" data-throw-if-not-resolved="false"></xref> object, 

    cast to the specified type <code class="typeparamref">T</code>.

    If local setting data is found, it is returned; otherwise, <code>null</code> is returned.
  example: []
  syntax:
    content: 'public static T GetLocalSettingOrDefault<T>(this ISettings setting) where T : ISettings'
    parameters:
    - id: setting
      type: OpenSettings.Services.Interfaces.ISettings
      description: The settings object for which the local setting data is to be retrieved.
    typeParameters:
    - id: T
      description: The type to which the local setting data should be cast. The type must implement <xref href="OpenSettings.Services.Interfaces.ISettings" data-throw-if-not-resolved="false"></xref>.
    return:
      type: '{T}'
      description: >-
        The local setting data associated with the setting object, cast to type <code class="typeparamref">T</code>, 

        or <code>null</code> if no data is found.
    content.vb: Public Shared Function GetLocalSettingOrDefault(Of T As ISettings)(setting As ISettings) As T
  overload: OpenSettings.Extensions.SettingsExtensions.GetLocalSettingOrDefault*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: Thrown if <param name="setting" /> null.
  nameWithType.vb: SettingsExtensions.GetLocalSettingOrDefault(Of T)(ISettings)
  fullName.vb: OpenSettings.Extensions.SettingsExtensions.GetLocalSettingOrDefault(Of T)(OpenSettings.Services.Interfaces.ISettings)
  name.vb: GetLocalSettingOrDefault(Of T)(ISettings)
references:
- uid: OpenSettings.Services.Interfaces.ISettings
  commentId: T:OpenSettings.Services.Interfaces.ISettings
  parent: OpenSettings.Services.Interfaces
  href: OpenSettings.Services.Interfaces.ISettings.html
  name: ISettings
  nameWithType: ISettings
  fullName: OpenSettings.Services.Interfaces.ISettings
- uid: OpenSettings.Extensions
  commentId: N:OpenSettings.Extensions
  href: OpenSettings.html
  name: OpenSettings.Extensions
  nameWithType: OpenSettings.Extensions
  fullName: OpenSettings.Extensions
  spec.csharp:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Extensions
    name: Extensions
    href: OpenSettings.Extensions.html
  spec.vb:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Extensions
    name: Extensions
    href: OpenSettings.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: OpenSettings.Services.Interfaces
  commentId: N:OpenSettings.Services.Interfaces
  href: OpenSettings.html
  name: OpenSettings.Services.Interfaces
  nameWithType: OpenSettings.Services.Interfaces
  fullName: OpenSettings.Services.Interfaces
  spec.csharp:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Services
    name: Services
    href: OpenSettings.Services.html
  - name: .
  - uid: OpenSettings.Services.Interfaces
    name: Interfaces
    href: OpenSettings.Services.Interfaces.html
  spec.vb:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Services
    name: Services
    href: OpenSettings.Services.html
  - name: .
  - uid: OpenSettings.Services.Interfaces
    name: Interfaces
    href: OpenSettings.Services.Interfaces.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OpenSettings.Models.RegistrationMode
  commentId: T:OpenSettings.Models.RegistrationMode
  parent: OpenSettings.Models
  href: OpenSettings.Models.RegistrationMode.html
  name: RegistrationMode
  nameWithType: RegistrationMode
  fullName: OpenSettings.Models.RegistrationMode
- uid: System.NullReferenceException
  commentId: T:System.NullReferenceException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullreferenceexception
  name: NullReferenceException
  nameWithType: NullReferenceException
  fullName: System.NullReferenceException
- uid: OpenSettings.Extensions.SettingsExtensions.GetRegistrationMode*
  commentId: Overload:OpenSettings.Extensions.SettingsExtensions.GetRegistrationMode
  href: OpenSettings.Extensions.SettingsExtensions.html#OpenSettings_Extensions_SettingsExtensions_GetRegistrationMode_OpenSettings_Services_Interfaces_ISettings_
  name: GetRegistrationMode
  nameWithType: SettingsExtensions.GetRegistrationMode
  fullName: OpenSettings.Extensions.SettingsExtensions.GetRegistrationMode
- uid: System.Nullable{OpenSettings.Models.RegistrationMode}
  commentId: T:System.Nullable{OpenSettings.Models.RegistrationMode}
  parent: System
  definition: System.Nullable`1
  href: OpenSettings.Models.RegistrationMode.html
  name: RegistrationMode?
  nameWithType: RegistrationMode?
  fullName: OpenSettings.Models.RegistrationMode?
  spec.csharp:
  - uid: OpenSettings.Models.RegistrationMode
    name: RegistrationMode
    href: OpenSettings.Models.RegistrationMode.html
  - name: '?'
  spec.vb:
  - uid: OpenSettings.Models.RegistrationMode
    name: RegistrationMode
    href: OpenSettings.Models.RegistrationMode.html
  - name: '?'
- uid: OpenSettings.Models
  commentId: N:OpenSettings.Models
  href: OpenSettings.html
  name: OpenSettings.Models
  nameWithType: OpenSettings.Models
  fullName: OpenSettings.Models
  spec.csharp:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Models
    name: Models
    href: OpenSettings.Models.html
  spec.vb:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Models
    name: Models
    href: OpenSettings.Models.html
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: OpenSettings.Extensions.SettingsExtensions.GetLocalSettingOrDefault*
  commentId: Overload:OpenSettings.Extensions.SettingsExtensions.GetLocalSettingOrDefault
  href: OpenSettings.Extensions.SettingsExtensions.html#OpenSettings_Extensions_SettingsExtensions_GetLocalSettingOrDefault_OpenSettings_Services_Interfaces_ISettings_
  name: GetLocalSettingOrDefault
  nameWithType: SettingsExtensions.GetLocalSettingOrDefault
  fullName: OpenSettings.Extensions.SettingsExtensions.GetLocalSettingOrDefault
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
