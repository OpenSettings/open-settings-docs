### YamlMime:ManagedReference
items:
- uid: OpenSettings.AspNetCore.ControllerOptions
  commentId: T:OpenSettings.AspNetCore.ControllerOptions
  id: ControllerOptions
  parent: OpenSettings.AspNetCore
  children:
  - OpenSettings.AspNetCore.ControllerOptions.#ctor
  - OpenSettings.AspNetCore.ControllerOptions.AllowFromExploring
  - OpenSettings.AspNetCore.ControllerOptions.Authorize
  - OpenSettings.AspNetCore.ControllerOptions.OAuth2Options
  - OpenSettings.AspNetCore.ControllerOptions.Route
  langs:
  - csharp
  - vb
  name: ControllerOptions
  nameWithType: ControllerOptions
  fullName: OpenSettings.AspNetCore.ControllerOptions
  type: Class
  source:
    remote:
      path: src/OpenSettings.AspNetCore.Spa/ControllerOptions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: ControllerOptions
    path: ../../../open-settings/src/OpenSettings.AspNetCore.Spa/ControllerOptions.cs
    startLine: 5
  assemblies:
  - OpenSettings.AspNetCore.Spa
  namespace: OpenSettings.AspNetCore
  summary: Configuration options for the settings controller, including route, authorization and Api visibility.
  example: []
  syntax:
    content: public class ControllerOptions
    content.vb: Public Class ControllerOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpenSettings.AspNetCore.ControllerOptions.#ctor
  commentId: M:OpenSettings.AspNetCore.ControllerOptions.#ctor
  id: '#ctor'
  parent: OpenSettings.AspNetCore.ControllerOptions
  langs:
  - csharp
  - vb
  name: ControllerOptions()
  nameWithType: ControllerOptions.ControllerOptions()
  fullName: OpenSettings.AspNetCore.ControllerOptions.ControllerOptions()
  type: Constructor
  source:
    remote:
      path: src/OpenSettings.AspNetCore.Spa/ControllerOptions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: .ctor
    path: ../../../open-settings/src/OpenSettings.AspNetCore.Spa/ControllerOptions.cs
    startLine: 12
  assemblies:
  - OpenSettings.AspNetCore.Spa
  namespace: OpenSettings.AspNetCore
  summary: Initializes a new instance of the <xref href="OpenSettings.AspNetCore.ControllerOptions" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public ControllerOptions()
    content.vb: Public Sub New()
  overload: OpenSettings.AspNetCore.ControllerOptions.#ctor*
  nameWithType.vb: ControllerOptions.New()
  fullName.vb: OpenSettings.AspNetCore.ControllerOptions.New()
  name.vb: New()
- uid: OpenSettings.AspNetCore.ControllerOptions.Route
  commentId: P:OpenSettings.AspNetCore.ControllerOptions.Route
  id: Route
  parent: OpenSettings.AspNetCore.ControllerOptions
  langs:
  - csharp
  - vb
  name: Route
  nameWithType: ControllerOptions.Route
  fullName: OpenSettings.AspNetCore.ControllerOptions.Route
  type: Property
  source:
    remote:
      path: src/OpenSettings.AspNetCore.Spa/ControllerOptions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: Route
    path: ../../../open-settings/src/OpenSettings.AspNetCore.Spa/ControllerOptions.cs
    startLine: 18
  assemblies:
  - OpenSettings.AspNetCore.Spa
  namespace: OpenSettings.AspNetCore
  summary: >-
    Gets or sets the base route for the service controller's endpoints.

    Default is "<code>api/settings</code>". Trailing and leading slashes are trimmed if present.
  example: []
  syntax:
    content: public string Route { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Route As String
  overload: OpenSettings.AspNetCore.ControllerOptions.Route*
- uid: OpenSettings.AspNetCore.ControllerOptions.AllowFromExploring
  commentId: P:OpenSettings.AspNetCore.ControllerOptions.AllowFromExploring
  id: AllowFromExploring
  parent: OpenSettings.AspNetCore.ControllerOptions
  langs:
  - csharp
  - vb
  name: AllowFromExploring
  nameWithType: ControllerOptions.AllowFromExploring
  fullName: OpenSettings.AspNetCore.ControllerOptions.AllowFromExploring
  type: Property
  source:
    remote:
      path: src/OpenSettings.AspNetCore.Spa/ControllerOptions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: AllowFromExploring
    path: ../../../open-settings/src/OpenSettings.AspNetCore.Spa/ControllerOptions.cs
    startLine: 29
  assemblies:
  - OpenSettings.AspNetCore.Spa
  namespace: OpenSettings.AspNetCore
  summary: >-
    Specifies whether the open settings controller's endpoints should be exposed in

    Api documentation (e.g., for Swagger or other Api explorers).

    <p>The default value is '<code>false</code>'.</p>
  example: []
  syntax:
    content: public bool AllowFromExploring { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowFromExploring As Boolean
  overload: OpenSettings.AspNetCore.ControllerOptions.AllowFromExploring*
- uid: OpenSettings.AspNetCore.ControllerOptions.Authorize
  commentId: P:OpenSettings.AspNetCore.ControllerOptions.Authorize
  id: Authorize
  parent: OpenSettings.AspNetCore.ControllerOptions
  langs:
  - csharp
  - vb
  name: Authorize
  nameWithType: ControllerOptions.Authorize
  fullName: OpenSettings.AspNetCore.ControllerOptions.Authorize
  type: Property
  source:
    remote:
      path: src/OpenSettings.AspNetCore.Spa/ControllerOptions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: Authorize
    path: ../../../open-settings/src/OpenSettings.AspNetCore.Spa/ControllerOptions.cs
    startLine: 44
  assemblies:
  - OpenSettings.AspNetCore.Spa
  namespace: OpenSettings.AspNetCore
  summary: >-
    Indicates whether the controller requires authentication for access.  

    <p>When set to true, authentication is enforced.</p>

    <p>

    When set to false, the controller is accessible without authentication unless the service type is Consumer,  

    in which case the provider's authorization settings take precedence, and authentication may still be required.

    </p>

    <p>

    (In future releases, this may integrate with AppConfigurations or InstanceConfigurations  

    to determine access based on priority or configuration rank).

    </p>

    <p>The default value is '<code>false</code>'.</p>
  example: []
  syntax:
    content: public bool Authorize { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Authorize As Boolean
  overload: OpenSettings.AspNetCore.ControllerOptions.Authorize*
- uid: OpenSettings.AspNetCore.ControllerOptions.OAuth2Options
  commentId: P:OpenSettings.AspNetCore.ControllerOptions.OAuth2Options
  id: OAuth2Options
  parent: OpenSettings.AspNetCore.ControllerOptions
  langs:
  - csharp
  - vb
  name: OAuth2Options
  nameWithType: ControllerOptions.OAuth2Options
  fullName: OpenSettings.AspNetCore.ControllerOptions.OAuth2Options
  type: Property
  source:
    remote:
      path: src/OpenSettings.AspNetCore.Spa/ControllerOptions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: OAuth2Options
    path: ../../../open-settings/src/OpenSettings.AspNetCore.Spa/ControllerOptions.cs
    startLine: 50
  assemblies:
  - OpenSettings.AspNetCore.Spa
  namespace: OpenSettings.AspNetCore
  summary: >-
    Gets or sets OAuth2 options for the settings controller, allowing for 

    more detailed configuration of authentication and authorization using OAuth2.
  example: []
  syntax:
    content: public OAuth2Options OAuth2Options { get; set; }
    parameters: []
    return:
      type: OpenSettings.AspNetCore.OAuth2Options
    content.vb: Public Property OAuth2Options As OAuth2Options
  overload: OpenSettings.AspNetCore.ControllerOptions.OAuth2Options*
references:
- uid: OpenSettings.AspNetCore
  commentId: N:OpenSettings.AspNetCore
  href: OpenSettings.html
  name: OpenSettings.AspNetCore
  nameWithType: OpenSettings.AspNetCore
  fullName: OpenSettings.AspNetCore
  spec.csharp:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.AspNetCore
    name: AspNetCore
    href: OpenSettings.AspNetCore.html
  spec.vb:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.AspNetCore
    name: AspNetCore
    href: OpenSettings.AspNetCore.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OpenSettings.AspNetCore.ControllerOptions
  commentId: T:OpenSettings.AspNetCore.ControllerOptions
  parent: OpenSettings.AspNetCore
  href: OpenSettings.AspNetCore.ControllerOptions.html
  name: ControllerOptions
  nameWithType: ControllerOptions
  fullName: OpenSettings.AspNetCore.ControllerOptions
- uid: OpenSettings.AspNetCore.ControllerOptions.#ctor*
  commentId: Overload:OpenSettings.AspNetCore.ControllerOptions.#ctor
  href: OpenSettings.AspNetCore.ControllerOptions.html#OpenSettings_AspNetCore_ControllerOptions__ctor
  name: ControllerOptions
  nameWithType: ControllerOptions.ControllerOptions
  fullName: OpenSettings.AspNetCore.ControllerOptions.ControllerOptions
  nameWithType.vb: ControllerOptions.New
  fullName.vb: OpenSettings.AspNetCore.ControllerOptions.New
  name.vb: New
- uid: OpenSettings.AspNetCore.ControllerOptions.Route*
  commentId: Overload:OpenSettings.AspNetCore.ControllerOptions.Route
  href: OpenSettings.AspNetCore.ControllerOptions.html#OpenSettings_AspNetCore_ControllerOptions_Route
  name: Route
  nameWithType: ControllerOptions.Route
  fullName: OpenSettings.AspNetCore.ControllerOptions.Route
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: OpenSettings.AspNetCore.ControllerOptions.AllowFromExploring*
  commentId: Overload:OpenSettings.AspNetCore.ControllerOptions.AllowFromExploring
  href: OpenSettings.AspNetCore.ControllerOptions.html#OpenSettings_AspNetCore_ControllerOptions_AllowFromExploring
  name: AllowFromExploring
  nameWithType: ControllerOptions.AllowFromExploring
  fullName: OpenSettings.AspNetCore.ControllerOptions.AllowFromExploring
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenSettings.AspNetCore.ControllerOptions.Authorize*
  commentId: Overload:OpenSettings.AspNetCore.ControllerOptions.Authorize
  href: OpenSettings.AspNetCore.ControllerOptions.html#OpenSettings_AspNetCore_ControllerOptions_Authorize
  name: Authorize
  nameWithType: ControllerOptions.Authorize
  fullName: OpenSettings.AspNetCore.ControllerOptions.Authorize
- uid: OpenSettings.AspNetCore.ControllerOptions.OAuth2Options*
  commentId: Overload:OpenSettings.AspNetCore.ControllerOptions.OAuth2Options
  href: OpenSettings.AspNetCore.ControllerOptions.html#OpenSettings_AspNetCore_ControllerOptions_OAuth2Options
  name: OAuth2Options
  nameWithType: ControllerOptions.OAuth2Options
  fullName: OpenSettings.AspNetCore.ControllerOptions.OAuth2Options
- uid: OpenSettings.AspNetCore.OAuth2Options
  commentId: T:OpenSettings.AspNetCore.OAuth2Options
  parent: OpenSettings.AspNetCore
  href: OpenSettings.AspNetCore.OAuth2Options.html
  name: OAuth2Options
  nameWithType: OAuth2Options
  fullName: OpenSettings.AspNetCore.OAuth2Options
