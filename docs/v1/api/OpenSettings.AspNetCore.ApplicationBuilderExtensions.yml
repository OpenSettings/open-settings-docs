### YamlMime:ManagedReference
items:
- uid: OpenSettings.AspNetCore.ApplicationBuilderExtensions
  commentId: T:OpenSettings.AspNetCore.ApplicationBuilderExtensions
  id: ApplicationBuilderExtensions
  parent: OpenSettings.AspNetCore
  children:
  - OpenSettings.AspNetCore.ApplicationBuilderExtensions.UseOpenSettings(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  - OpenSettings.AspNetCore.ApplicationBuilderExtensions.UseOpenSettingsSpa(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{OpenSettings.AspNetCore.Spa.SettingsSpaOptions})
  langs:
  - csharp
  - vb
  name: ApplicationBuilderExtensions
  nameWithType: ApplicationBuilderExtensions
  fullName: OpenSettings.AspNetCore.ApplicationBuilderExtensions
  type: Class
  source:
    remote:
      path: src/OpenSettings.AspNetCore/ApplicationBuilderExtensions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: ApplicationBuilderExtensions
    path: ../../../open-settings/src/OpenSettings.AspNetCore/ApplicationBuilderExtensions.cs
    startLine: 22
  assemblies:
  - OpenSettings.AspNetCore
  namespace: OpenSettings.AspNetCore
  summary: >-
    Provides extension methods for configuring OpenSettings within an ASP.NET Core application pipeline.

    This class contains methods to update instance status and ensure proper integration with OpenSettings.
  example: []
  syntax:
    content: public static class ApplicationBuilderExtensions
    content.vb: Public Module ApplicationBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpenSettings.AspNetCore.ApplicationBuilderExtensions.UseOpenSettings(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  commentId: M:OpenSettings.AspNetCore.ApplicationBuilderExtensions.UseOpenSettings(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  id: UseOpenSettings(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  isExtensionMethod: true
  parent: OpenSettings.AspNetCore.ApplicationBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseOpenSettings(IApplicationBuilder)
  nameWithType: ApplicationBuilderExtensions.UseOpenSettings(IApplicationBuilder)
  fullName: OpenSettings.AspNetCore.ApplicationBuilderExtensions.UseOpenSettings(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  type: Method
  source:
    remote:
      path: src/OpenSettings.AspNetCore/ApplicationBuilderExtensions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: UseOpenSettings
    path: ../../../open-settings/src/OpenSettings.AspNetCore/ApplicationBuilderExtensions.cs
    startLine: 32
  assemblies:
  - OpenSettings.AspNetCore
  namespace: OpenSettings.AspNetCore
  summary: >-
    Updates instance status when the application is starting or stopping.  

    <p>This includes updating the instance's activity status, urls, and other relevant data.</p>

    <p>Throws an exception if <xref href="OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder%2cOpenSettings.Configurations.OpenSettingsConfiguration%2cSystem.Func%7bMicrosoft.Extensions.Configuration.IConfiguration%2cSystem.Threading.Tasks.Task%7d%2cSystem.Type%5b%5d)" data-throw-if-not-resolved="false"></xref> and <xref href="OpenSettings.Extensions.ServiceCollectionExtensions.AddOpenSettings(Microsoft.Extensions.DependencyInjection.IServiceCollection%2cOpenSettings.Configurations.OpenSettingsConfiguration%2cOpenSettings.Models.ProviderInfo)" data-throw-if-not-resolved="false"></xref> have not been configured yet.</p>
  example: []
  syntax:
    content: public static IApplicationBuilder UseOpenSettings(this IApplicationBuilder app)
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The <xref href="Microsoft.AspNetCore.Builder.IApplicationBuilder" data-throw-if-not-resolved="false"></xref> instance used to configure the application's request pipeline.
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The modified <xref href="Microsoft.AspNetCore.Builder.IApplicationBuilder" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Function UseOpenSettings(app As IApplicationBuilder) As IApplicationBuilder
  overload: OpenSettings.AspNetCore.ApplicationBuilderExtensions.UseOpenSettings*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: Thrown if settings have not been properly configured.
- uid: OpenSettings.AspNetCore.ApplicationBuilderExtensions.UseOpenSettingsSpa(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{OpenSettings.AspNetCore.Spa.SettingsSpaOptions})
  commentId: M:OpenSettings.AspNetCore.ApplicationBuilderExtensions.UseOpenSettingsSpa(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{OpenSettings.AspNetCore.Spa.SettingsSpaOptions})
  id: UseOpenSettingsSpa(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{OpenSettings.AspNetCore.Spa.SettingsSpaOptions})
  isExtensionMethod: true
  parent: OpenSettings.AspNetCore.ApplicationBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseOpenSettingsSpa(IApplicationBuilder, Action<SettingsSpaOptions>)
  nameWithType: ApplicationBuilderExtensions.UseOpenSettingsSpa(IApplicationBuilder, Action<SettingsSpaOptions>)
  fullName: OpenSettings.AspNetCore.ApplicationBuilderExtensions.UseOpenSettingsSpa(Microsoft.AspNetCore.Builder.IApplicationBuilder, System.Action<OpenSettings.AspNetCore.Spa.SettingsSpaOptions>)
  type: Method
  source:
    remote:
      path: src/OpenSettings.AspNetCore/ApplicationBuilderExtensions.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: UseOpenSettingsSpa
    path: ../../../open-settings/src/OpenSettings.AspNetCore/ApplicationBuilderExtensions.cs
    startLine: 117
  assemblies:
  - OpenSettings.AspNetCore
  namespace: OpenSettings.AspNetCore
  summary: >-
    Registers the open settings spa middleware and configures its options.

    This method must be called after <code>AddOpenSettingsController</code> has been configured,

    otherwise, a <xref href="System.NullReferenceException" data-throw-if-not-resolved="false"></xref> will be thrown.
  example: []
  syntax:
    content: public static IApplicationBuilder UseOpenSettingsSpa(this IApplicationBuilder app, Action<SettingsSpaOptions> configure = null)
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The <xref href="Microsoft.AspNetCore.Builder.IApplicationBuilder" data-throw-if-not-resolved="false"></xref> used to configure the request pipeline.
    - id: configure
      type: System.Action{OpenSettings.AspNetCore.Spa.SettingsSpaOptions}
      description: An optional delegate to configure <xref href="OpenSettings.AspNetCore.Spa.SettingsSpaOptions" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: Returns the <xref href="Microsoft.AspNetCore.Builder.IApplicationBuilder" data-throw-if-not-resolved="false"></xref> to allow further configuration in the middleware pipeline.
    content.vb: Public Shared Function UseOpenSettingsSpa(app As IApplicationBuilder, configure As Action(Of SettingsSpaOptions) = Nothing) As IApplicationBuilder
  overload: OpenSettings.AspNetCore.ApplicationBuilderExtensions.UseOpenSettingsSpa*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: Thrown if <code>AddOpenSettingsController</code> was not called before this method.
  nameWithType.vb: ApplicationBuilderExtensions.UseOpenSettingsSpa(IApplicationBuilder, Action(Of SettingsSpaOptions))
  fullName.vb: OpenSettings.AspNetCore.ApplicationBuilderExtensions.UseOpenSettingsSpa(Microsoft.AspNetCore.Builder.IApplicationBuilder, System.Action(Of OpenSettings.AspNetCore.Spa.SettingsSpaOptions))
  name.vb: UseOpenSettingsSpa(IApplicationBuilder, Action(Of SettingsSpaOptions))
references:
- uid: OpenSettings.AspNetCore
  commentId: N:OpenSettings.AspNetCore
  href: OpenSettings.html
  name: OpenSettings.AspNetCore
  nameWithType: OpenSettings.AspNetCore
  fullName: OpenSettings.AspNetCore
  spec.csharp:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.AspNetCore
    name: AspNetCore
    href: OpenSettings.AspNetCore.html
  spec.vb:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.AspNetCore
    name: AspNetCore
    href: OpenSettings.AspNetCore.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.Func{Microsoft.Extensions.Configuration.IConfiguration,System.Threading.Tasks.Task},System.Type[])
  commentId: M:OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.Func{Microsoft.Extensions.Configuration.IConfiguration,System.Threading.Tasks.Task},System.Type[])
  isExternal: true
  href: OpenSettings.Extensions.HostBuilderExtensions.html#OpenSettings_Extensions_HostBuilderExtensions_UseOpenSettingsAsync_Microsoft_Extensions_Hosting_IHostBuilder_OpenSettings_Configurations_OpenSettingsConfiguration_System_Func_Microsoft_Extensions_Configuration_IConfiguration_System_Threading_Tasks_Task__System_Type___
  name: UseOpenSettingsAsync(IHostBuilder, OpenSettingsConfiguration, Func<IConfiguration, Task>, params Type[])
  nameWithType: HostBuilderExtensions.UseOpenSettingsAsync(IHostBuilder, OpenSettingsConfiguration, Func<IConfiguration, Task>, params Type[])
  fullName: OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder, OpenSettings.Configurations.OpenSettingsConfiguration, System.Func<Microsoft.Extensions.Configuration.IConfiguration, System.Threading.Tasks.Task>, params System.Type[])
  nameWithType.vb: HostBuilderExtensions.UseOpenSettingsAsync(IHostBuilder, OpenSettingsConfiguration, Func(Of IConfiguration, Task), ParamArray Type())
  fullName.vb: OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder, OpenSettings.Configurations.OpenSettingsConfiguration, System.Func(Of Microsoft.Extensions.Configuration.IConfiguration, System.Threading.Tasks.Task), ParamArray System.Type())
  name.vb: UseOpenSettingsAsync(IHostBuilder, OpenSettingsConfiguration, Func(Of IConfiguration, Task), ParamArray Type())
  spec.csharp:
  - uid: OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.Func{Microsoft.Extensions.Configuration.IConfiguration,System.Threading.Tasks.Task},System.Type[])
    name: UseOpenSettingsAsync
    href: OpenSettings.Extensions.HostBuilderExtensions.html#OpenSettings_Extensions_HostBuilderExtensions_UseOpenSettingsAsync_Microsoft_Extensions_Hosting_IHostBuilder_OpenSettings_Configurations_OpenSettingsConfiguration_System_Func_Microsoft_Extensions_Configuration_IConfiguration_System_Threading_Tasks_Task__System_Type___
  - name: (
  - uid: Microsoft.Extensions.Hosting.IHostBuilder
    name: IHostBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostbuilder
  - name: ','
  - name: " "
  - uid: OpenSettings.Configurations.OpenSettingsConfiguration
    name: OpenSettingsConfiguration
    href: OpenSettings.Configurations.OpenSettingsConfiguration.html
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfiguration
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.Func{Microsoft.Extensions.Configuration.IConfiguration,System.Threading.Tasks.Task},System.Type[])
    name: UseOpenSettingsAsync
    href: OpenSettings.Extensions.HostBuilderExtensions.html#OpenSettings_Extensions_HostBuilderExtensions_UseOpenSettingsAsync_Microsoft_Extensions_Hosting_IHostBuilder_OpenSettings_Configurations_OpenSettingsConfiguration_System_Func_Microsoft_Extensions_Configuration_IConfiguration_System_Threading_Tasks_Task__System_Type___
  - name: (
  - uid: Microsoft.Extensions.Hosting.IHostBuilder
    name: IHostBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostbuilder
  - name: ','
  - name: " "
  - uid: OpenSettings.Configurations.OpenSettingsConfiguration
    name: OpenSettingsConfiguration
    href: OpenSettings.Configurations.OpenSettingsConfiguration.html
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfiguration
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
  - name: )
- uid: OpenSettings.Extensions.ServiceCollectionExtensions.AddOpenSettings(Microsoft.Extensions.DependencyInjection.IServiceCollection,OpenSettings.Configurations.OpenSettingsConfiguration,OpenSettings.Models.ProviderInfo)
  commentId: M:OpenSettings.Extensions.ServiceCollectionExtensions.AddOpenSettings(Microsoft.Extensions.DependencyInjection.IServiceCollection,OpenSettings.Configurations.OpenSettingsConfiguration,OpenSettings.Models.ProviderInfo)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection
  name: AddOpenSettings(IServiceCollection, OpenSettingsConfiguration, ProviderInfo)
  nameWithType: ServiceCollectionExtensions.AddOpenSettings(IServiceCollection, OpenSettingsConfiguration, ProviderInfo)
  fullName: OpenSettings.Extensions.ServiceCollectionExtensions.AddOpenSettings(Microsoft.Extensions.DependencyInjection.IServiceCollection, OpenSettings.Configurations.OpenSettingsConfiguration, OpenSettings.Models.ProviderInfo)
  spec.csharp:
  - uid: OpenSettings.Extensions.ServiceCollectionExtensions.AddOpenSettings(Microsoft.Extensions.DependencyInjection.IServiceCollection,OpenSettings.Configurations.OpenSettingsConfiguration,OpenSettings.Models.ProviderInfo)
    name: AddOpenSettings
  - name: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection
  - name: ','
  - name: " "
  - uid: OpenSettings.Configurations.OpenSettingsConfiguration
    name: OpenSettingsConfiguration
  - name: ','
  - name: " "
  - uid: OpenSettings.Models.ProviderInfo
    name: ProviderInfo
  - name: )
  spec.vb:
  - uid: OpenSettings.Extensions.ServiceCollectionExtensions.AddOpenSettings(Microsoft.Extensions.DependencyInjection.IServiceCollection,OpenSettings.Configurations.OpenSettingsConfiguration,OpenSettings.Models.ProviderInfo)
    name: AddOpenSettings
  - name: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection
  - name: ','
  - name: " "
  - uid: OpenSettings.Configurations.OpenSettingsConfiguration
    name: OpenSettingsConfiguration
  - name: ','
  - name: " "
  - uid: OpenSettings.Models.ProviderInfo
    name: ProviderInfo
  - name: )
- uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
  commentId: T:Microsoft.AspNetCore.Builder.IApplicationBuilder
  parent: Microsoft.AspNetCore.Builder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.builder.iapplicationbuilder
  name: IApplicationBuilder
  nameWithType: IApplicationBuilder
  fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: OpenSettings.AspNetCore.ApplicationBuilderExtensions.UseOpenSettings*
  commentId: Overload:OpenSettings.AspNetCore.ApplicationBuilderExtensions.UseOpenSettings
  href: OpenSettings.AspNetCore.ApplicationBuilderExtensions.html#OpenSettings_AspNetCore_ApplicationBuilderExtensions_UseOpenSettings_Microsoft_AspNetCore_Builder_IApplicationBuilder_
  name: UseOpenSettings
  nameWithType: ApplicationBuilderExtensions.UseOpenSettings
  fullName: OpenSettings.AspNetCore.ApplicationBuilderExtensions.UseOpenSettings
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Builder
    name: Builder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.builder
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Builder
    name: Builder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.builder
- uid: System.NullReferenceException
  commentId: T:System.NullReferenceException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullreferenceexception
  name: NullReferenceException
  nameWithType: NullReferenceException
  fullName: System.NullReferenceException
- uid: OpenSettings.AspNetCore.Spa.SettingsSpaOptions
  commentId: T:OpenSettings.AspNetCore.Spa.SettingsSpaOptions
  parent: OpenSettings.AspNetCore.Spa
  href: OpenSettings.AspNetCore.Spa.SettingsSpaOptions.html
  name: SettingsSpaOptions
  nameWithType: SettingsSpaOptions
  fullName: OpenSettings.AspNetCore.Spa.SettingsSpaOptions
- uid: OpenSettings.AspNetCore.ApplicationBuilderExtensions.UseOpenSettingsSpa*
  commentId: Overload:OpenSettings.AspNetCore.ApplicationBuilderExtensions.UseOpenSettingsSpa
  href: OpenSettings.AspNetCore.ApplicationBuilderExtensions.html#OpenSettings_AspNetCore_ApplicationBuilderExtensions_UseOpenSettingsSpa_Microsoft_AspNetCore_Builder_IApplicationBuilder_System_Action_OpenSettings_AspNetCore_Spa_SettingsSpaOptions__
  name: UseOpenSettingsSpa
  nameWithType: ApplicationBuilderExtensions.UseOpenSettingsSpa
  fullName: OpenSettings.AspNetCore.ApplicationBuilderExtensions.UseOpenSettingsSpa
- uid: System.Action{OpenSettings.AspNetCore.Spa.SettingsSpaOptions}
  commentId: T:System.Action{OpenSettings.AspNetCore.Spa.SettingsSpaOptions}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<SettingsSpaOptions>
  nameWithType: Action<SettingsSpaOptions>
  fullName: System.Action<OpenSettings.AspNetCore.Spa.SettingsSpaOptions>
  nameWithType.vb: Action(Of SettingsSpaOptions)
  fullName.vb: System.Action(Of OpenSettings.AspNetCore.Spa.SettingsSpaOptions)
  name.vb: Action(Of SettingsSpaOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: OpenSettings.AspNetCore.Spa.SettingsSpaOptions
    name: SettingsSpaOptions
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenSettings.AspNetCore.Spa.SettingsSpaOptions
    name: SettingsSpaOptions
  - name: )
- uid: OpenSettings.AspNetCore.Spa
  commentId: N:OpenSettings.AspNetCore.Spa
  href: OpenSettings.html
  name: OpenSettings.AspNetCore.Spa
  nameWithType: OpenSettings.AspNetCore.Spa
  fullName: OpenSettings.AspNetCore.Spa
  spec.csharp:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.AspNetCore
    name: AspNetCore
    href: OpenSettings.AspNetCore.html
  - name: .
  - uid: OpenSettings.AspNetCore.Spa
    name: Spa
    href: OpenSettings.AspNetCore.Spa.html
  spec.vb:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.AspNetCore
    name: AspNetCore
    href: OpenSettings.AspNetCore.html
  - name: .
  - uid: OpenSettings.AspNetCore.Spa
    name: Spa
    href: OpenSettings.AspNetCore.Spa.html
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
