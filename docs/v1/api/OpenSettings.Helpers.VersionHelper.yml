### YamlMime:ManagedReference
items:
- uid: OpenSettings.Helpers.VersionHelper
  commentId: T:OpenSettings.Helpers.VersionHelper
  id: VersionHelper
  parent: OpenSettings.Helpers
  children:
  - OpenSettings.Helpers.VersionHelper.GetPackInfo(System.Reflection.Assembly)
  - OpenSettings.Helpers.VersionHelper.GetPackInfo(System.String)
  langs:
  - csharp
  - vb
  name: VersionHelper
  nameWithType: VersionHelper
  fullName: OpenSettings.Helpers.VersionHelper
  type: Class
  source:
    remote:
      path: src/OpenSettings/Helpers/VersionHelper.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: VersionHelper
    path: ../../../open-settings/src/OpenSettings/Helpers/VersionHelper.cs
    startLine: 10
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Helpers
  summary: >-
    Provides helper methods for parsing version strings and calculating version scores.

    Supports both stable versions and preview versions, and helps to compare versions.
  example: []
  syntax:
    content: public static class VersionHelper
    content.vb: Public Module VersionHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpenSettings.Helpers.VersionHelper.GetPackInfo(System.String)
  commentId: M:OpenSettings.Helpers.VersionHelper.GetPackInfo(System.String)
  id: GetPackInfo(System.String)
  parent: OpenSettings.Helpers.VersionHelper
  langs:
  - csharp
  - vb
  name: GetPackInfo(string)
  nameWithType: VersionHelper.GetPackInfo(string)
  fullName: OpenSettings.Helpers.VersionHelper.GetPackInfo(string)
  type: Method
  source:
    remote:
      path: src/OpenSettings/Helpers/VersionHelper.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: GetPackInfo
    path: ../../../open-settings/src/OpenSettings/Helpers/VersionHelper.cs
    startLine: 24
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Helpers
  summary: >-
    Parses a version string and calculates its corresponding score.

    Determines whether the version is a preview version or a stable version.
  example: []
  syntax:
    content: public static (long Score, bool IsPreview) GetPackInfo(string packVersion)
    parameters:
    - id: packVersion
      type: System.String
      description: >-
        The version string to parse. Can be in the format 'major.minor.patch' for stable versions 
            or 'major.minor.patch-preview.previewNo.runNo.runAttempt' for preview versions.
    return:
      type: System.ValueTuple{System.Int64,System.Boolean}
      description: A tuple with the pack version score (long) and a boolean indicating if it's a preview version.
    content.vb: Public Shared Function GetPackInfo(packVersion As String) As (Score As Long, IsPreview As Boolean)
  overload: OpenSettings.Helpers.VersionHelper.GetPackInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if the version format is invalid.
  nameWithType.vb: VersionHelper.GetPackInfo(String)
  fullName.vb: OpenSettings.Helpers.VersionHelper.GetPackInfo(String)
  name.vb: GetPackInfo(String)
- uid: OpenSettings.Helpers.VersionHelper.GetPackInfo(System.Reflection.Assembly)
  commentId: M:OpenSettings.Helpers.VersionHelper.GetPackInfo(System.Reflection.Assembly)
  id: GetPackInfo(System.Reflection.Assembly)
  isExtensionMethod: true
  parent: OpenSettings.Helpers.VersionHelper
  langs:
  - csharp
  - vb
  name: GetPackInfo(Assembly)
  nameWithType: VersionHelper.GetPackInfo(Assembly)
  fullName: OpenSettings.Helpers.VersionHelper.GetPackInfo(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/OpenSettings/Helpers/VersionHelper.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: GetPackInfo
    path: ../../../open-settings/src/OpenSettings/Helpers/VersionHelper.cs
    startLine: 68
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Helpers
  summary: >-
    Retrieves version information from an assembly, including its version score and whether it's a preview version.

    Extracts the version from the assembly's informational version attribute.
  example: []
  syntax:
    content: public static (string PackVersion, long Score, bool IsPreview) GetPackInfo(this Assembly assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly from which to retrieve the version information.
    return:
      type: System.ValueTuple{System.String,System.Int64,System.Boolean}
      description: A tuple containing the pack version string, the pack version's score (long), and a boolean indicating if it's a preview version.
    content.vb: Public Shared Function GetPackInfo(assembly As Assembly) As (PackVersion As String, Score As Long, IsPreview As Boolean)
  overload: OpenSettings.Helpers.VersionHelper.GetPackInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if the version format is invalid or no version is found.
references:
- uid: OpenSettings.Helpers
  commentId: N:OpenSettings.Helpers
  href: OpenSettings.html
  name: OpenSettings.Helpers
  nameWithType: OpenSettings.Helpers
  fullName: OpenSettings.Helpers
  spec.csharp:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Helpers
    name: Helpers
    href: OpenSettings.Helpers.html
  spec.vb:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Helpers
    name: Helpers
    href: OpenSettings.Helpers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: OpenSettings.Helpers.VersionHelper.GetPackInfo*
  commentId: Overload:OpenSettings.Helpers.VersionHelper.GetPackInfo
  href: OpenSettings.Helpers.VersionHelper.html#OpenSettings_Helpers_VersionHelper_GetPackInfo_System_String_
  name: GetPackInfo
  nameWithType: VersionHelper.GetPackInfo
  fullName: OpenSettings.Helpers.VersionHelper.GetPackInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueTuple{System.Int64,System.Boolean}
  commentId: T:System.ValueTuple{System.Int64,System.Boolean}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: (long Score, bool IsPreview)
  nameWithType: (long Score, bool IsPreview)
  fullName: (long Score, bool IsPreview)
  nameWithType.vb: (Score As Long, IsPreview As Boolean)
  fullName.vb: (Score As Long, IsPreview As Boolean)
  name.vb: (Score As Long, IsPreview As Boolean)
  spec.csharp:
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: " "
  - uid: System.ValueTuple{System.Int64,System.Boolean}.Score
    name: Score
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int64,system.boolean-.score
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{System.Int64,System.Boolean}.IsPreview
    name: IsPreview
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int64,system.boolean-.ispreview
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Int64,System.Boolean}.Score
    name: Score
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int64,system.boolean-.score
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int64,System.Boolean}.IsPreview
    name: IsPreview
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int64,system.boolean-.ispreview
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.ValueTuple{System.String,System.Int64,System.Boolean}
  commentId: T:System.ValueTuple{System.String,System.Int64,System.Boolean}
  parent: System
  definition: System.ValueTuple`3
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: (string PackVersion, long Score, bool IsPreview)
  nameWithType: (string PackVersion, long Score, bool IsPreview)
  fullName: (string PackVersion, long Score, bool IsPreview)
  nameWithType.vb: (PackVersion As String, Score As Long, IsPreview As Boolean)
  fullName.vb: (PackVersion As String, Score As Long, IsPreview As Boolean)
  name.vb: (PackVersion As String, Score As Long, IsPreview As Boolean)
  spec.csharp:
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int64,System.Boolean}.PackVersion
    name: PackVersion
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64,system.boolean-.packversion
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int64,System.Boolean}.Score
    name: Score
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64,system.boolean-.score
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int64,System.Boolean}.IsPreview
    name: IsPreview
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64,system.boolean-.ispreview
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.String,System.Int64,System.Boolean}.PackVersion
    name: PackVersion
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64,system.boolean-.packversion
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int64,System.Boolean}.Score
    name: Score
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64,system.boolean-.score
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int64,System.Boolean}.IsPreview
    name: IsPreview
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64,system.boolean-.ispreview
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
- uid: System.ValueTuple`3
  commentId: T:System.ValueTuple`3
  name: (T1, T2, T3)
  nameWithType: (T1, T2, T3)
  fullName: (T1, T2, T3)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
