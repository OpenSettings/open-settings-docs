### YamlMime:ManagedReference
items:
- uid: OpenSettings.LicenseProvider
  commentId: T:OpenSettings.LicenseProvider
  id: LicenseProvider
  parent: OpenSettings
  children:
  - OpenSettings.LicenseProvider.CurrentLicense
  - OpenSettings.LicenseProvider.Instance
  langs:
  - csharp
  - vb
  name: LicenseProvider
  nameWithType: LicenseProvider
  fullName: OpenSettings.LicenseProvider
  type: Class
  source:
    remote:
      path: src/OpenSettings/LicenseProvider.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: LicenseProvider
    path: ../../../open-settings/src/OpenSettings/LicenseProvider.cs
    startLine: 20
  assemblies:
  - OpenSettings
  namespace: OpenSettings
  summary: Provides functionality to initialize and manage the current license for the application.
  example: []
  syntax:
    content: public class LicenseProvider
    content.vb: Public Class LicenseProvider
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpenSettings.LicenseProvider.Instance
  commentId: F:OpenSettings.LicenseProvider.Instance
  id: Instance
  parent: OpenSettings.LicenseProvider
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: LicenseProvider.Instance
  fullName: OpenSettings.LicenseProvider.Instance
  type: Field
  source:
    remote:
      path: src/OpenSettings/LicenseProvider.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: Instance
    path: ../../../open-settings/src/OpenSettings/LicenseProvider.cs
    startLine: 25
  assemblies:
  - OpenSettings
  namespace: OpenSettings
  summary: Singleton instance of the <xref href="OpenSettings.LicenseProvider" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public static readonly LicenseProvider Instance
    return:
      type: OpenSettings.LicenseProvider
    content.vb: Public Shared ReadOnly Instance As LicenseProvider
- uid: OpenSettings.LicenseProvider.CurrentLicense
  commentId: P:OpenSettings.LicenseProvider.CurrentLicense
  id: CurrentLicense
  parent: OpenSettings.LicenseProvider
  langs:
  - csharp
  - vb
  name: CurrentLicense
  nameWithType: LicenseProvider.CurrentLicense
  fullName: OpenSettings.LicenseProvider.CurrentLicense
  type: Property
  source:
    remote:
      path: src/OpenSettings/LicenseProvider.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: CurrentLicense
    path: ../../../open-settings/src/OpenSettings/LicenseProvider.cs
    startLine: 37
  assemblies:
  - OpenSettings
  namespace: OpenSettings
  summary: >-
    Gets the currently active license, which is assigned internally during a call to 

    <xref href="OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder%2cOpenSettings.Configurations.OpenSettingsConfiguration%2cSystem.Type%5b%5d)" data-throw-if-not-resolved="false"></xref> or

    <xref href="OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder%2cOpenSettings.Configurations.OpenSettingsConfiguration%2cSystem.Func%7bMicrosoft.Extensions.Configuration.IConfiguration%2cSystem.Threading.Tasks.Task%7d%2cSystem.Type%5b%5d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public License CurrentLicense { get; }
    parameters: []
    return:
      type: OpenSettings.Models.License
    content.vb: Public Property CurrentLicense As License
  overload: OpenSettings.LicenseProvider.CurrentLicense*
references:
- uid: OpenSettings
  commentId: N:OpenSettings
  href: OpenSettings.html
  name: OpenSettings
  nameWithType: OpenSettings
  fullName: OpenSettings
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OpenSettings.LicenseProvider
  commentId: T:OpenSettings.LicenseProvider
  parent: OpenSettings
  href: OpenSettings.LicenseProvider.html
  name: LicenseProvider
  nameWithType: LicenseProvider
  fullName: OpenSettings.LicenseProvider
- uid: OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.Type[])
  commentId: M:OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.Type[])
  isExternal: true
  href: OpenSettings.Extensions.HostBuilderExtensions.html#OpenSettings_Extensions_HostBuilderExtensions_UseOpenSettingsAsync_Microsoft_Extensions_Hosting_IHostBuilder_OpenSettings_Configurations_OpenSettingsConfiguration_System_Type___
  name: UseOpenSettingsAsync(IHostBuilder, OpenSettingsConfiguration, params Type[])
  nameWithType: HostBuilderExtensions.UseOpenSettingsAsync(IHostBuilder, OpenSettingsConfiguration, params Type[])
  fullName: OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder, OpenSettings.Configurations.OpenSettingsConfiguration, params System.Type[])
  nameWithType.vb: HostBuilderExtensions.UseOpenSettingsAsync(IHostBuilder, OpenSettingsConfiguration, ParamArray Type())
  fullName.vb: OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder, OpenSettings.Configurations.OpenSettingsConfiguration, ParamArray System.Type())
  name.vb: UseOpenSettingsAsync(IHostBuilder, OpenSettingsConfiguration, ParamArray Type())
  spec.csharp:
  - uid: OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.Type[])
    name: UseOpenSettingsAsync
    href: OpenSettings.Extensions.HostBuilderExtensions.html#OpenSettings_Extensions_HostBuilderExtensions_UseOpenSettingsAsync_Microsoft_Extensions_Hosting_IHostBuilder_OpenSettings_Configurations_OpenSettingsConfiguration_System_Type___
  - name: (
  - uid: Microsoft.Extensions.Hosting.IHostBuilder
    name: IHostBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostbuilder
  - name: ','
  - name: " "
  - uid: OpenSettings.Configurations.OpenSettingsConfiguration
    name: OpenSettingsConfiguration
    href: OpenSettings.Configurations.OpenSettingsConfiguration.html
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.Type[])
    name: UseOpenSettingsAsync
    href: OpenSettings.Extensions.HostBuilderExtensions.html#OpenSettings_Extensions_HostBuilderExtensions_UseOpenSettingsAsync_Microsoft_Extensions_Hosting_IHostBuilder_OpenSettings_Configurations_OpenSettingsConfiguration_System_Type___
  - name: (
  - uid: Microsoft.Extensions.Hosting.IHostBuilder
    name: IHostBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostbuilder
  - name: ','
  - name: " "
  - uid: OpenSettings.Configurations.OpenSettingsConfiguration
    name: OpenSettingsConfiguration
    href: OpenSettings.Configurations.OpenSettingsConfiguration.html
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
  - name: )
- uid: OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.Func{Microsoft.Extensions.Configuration.IConfiguration,System.Threading.Tasks.Task},System.Type[])
  commentId: M:OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.Func{Microsoft.Extensions.Configuration.IConfiguration,System.Threading.Tasks.Task},System.Type[])
  isExternal: true
  href: OpenSettings.Extensions.HostBuilderExtensions.html#OpenSettings_Extensions_HostBuilderExtensions_UseOpenSettingsAsync_Microsoft_Extensions_Hosting_IHostBuilder_OpenSettings_Configurations_OpenSettingsConfiguration_System_Func_Microsoft_Extensions_Configuration_IConfiguration_System_Threading_Tasks_Task__System_Type___
  name: UseOpenSettingsAsync(IHostBuilder, OpenSettingsConfiguration, Func<IConfiguration, Task>, params Type[])
  nameWithType: HostBuilderExtensions.UseOpenSettingsAsync(IHostBuilder, OpenSettingsConfiguration, Func<IConfiguration, Task>, params Type[])
  fullName: OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder, OpenSettings.Configurations.OpenSettingsConfiguration, System.Func<Microsoft.Extensions.Configuration.IConfiguration, System.Threading.Tasks.Task>, params System.Type[])
  nameWithType.vb: HostBuilderExtensions.UseOpenSettingsAsync(IHostBuilder, OpenSettingsConfiguration, Func(Of IConfiguration, Task), ParamArray Type())
  fullName.vb: OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder, OpenSettings.Configurations.OpenSettingsConfiguration, System.Func(Of Microsoft.Extensions.Configuration.IConfiguration, System.Threading.Tasks.Task), ParamArray System.Type())
  name.vb: UseOpenSettingsAsync(IHostBuilder, OpenSettingsConfiguration, Func(Of IConfiguration, Task), ParamArray Type())
  spec.csharp:
  - uid: OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.Func{Microsoft.Extensions.Configuration.IConfiguration,System.Threading.Tasks.Task},System.Type[])
    name: UseOpenSettingsAsync
    href: OpenSettings.Extensions.HostBuilderExtensions.html#OpenSettings_Extensions_HostBuilderExtensions_UseOpenSettingsAsync_Microsoft_Extensions_Hosting_IHostBuilder_OpenSettings_Configurations_OpenSettingsConfiguration_System_Func_Microsoft_Extensions_Configuration_IConfiguration_System_Threading_Tasks_Task__System_Type___
  - name: (
  - uid: Microsoft.Extensions.Hosting.IHostBuilder
    name: IHostBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostbuilder
  - name: ','
  - name: " "
  - uid: OpenSettings.Configurations.OpenSettingsConfiguration
    name: OpenSettingsConfiguration
    href: OpenSettings.Configurations.OpenSettingsConfiguration.html
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfiguration
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: OpenSettings.Extensions.HostBuilderExtensions.UseOpenSettingsAsync(Microsoft.Extensions.Hosting.IHostBuilder,OpenSettings.Configurations.OpenSettingsConfiguration,System.Func{Microsoft.Extensions.Configuration.IConfiguration,System.Threading.Tasks.Task},System.Type[])
    name: UseOpenSettingsAsync
    href: OpenSettings.Extensions.HostBuilderExtensions.html#OpenSettings_Extensions_HostBuilderExtensions_UseOpenSettingsAsync_Microsoft_Extensions_Hosting_IHostBuilder_OpenSettings_Configurations_OpenSettingsConfiguration_System_Func_Microsoft_Extensions_Configuration_IConfiguration_System_Threading_Tasks_Task__System_Type___
  - name: (
  - uid: Microsoft.Extensions.Hosting.IHostBuilder
    name: IHostBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostbuilder
  - name: ','
  - name: " "
  - uid: OpenSettings.Configurations.OpenSettingsConfiguration
    name: OpenSettingsConfiguration
    href: OpenSettings.Configurations.OpenSettingsConfiguration.html
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfiguration
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
  - name: )
- uid: OpenSettings.LicenseProvider.CurrentLicense*
  commentId: Overload:OpenSettings.LicenseProvider.CurrentLicense
  href: OpenSettings.LicenseProvider.html#OpenSettings_LicenseProvider_CurrentLicense
  name: CurrentLicense
  nameWithType: LicenseProvider.CurrentLicense
  fullName: OpenSettings.LicenseProvider.CurrentLicense
- uid: OpenSettings.Models.License
  commentId: T:OpenSettings.Models.License
  parent: OpenSettings.Models
  href: OpenSettings.Models.License.html
  name: License
  nameWithType: License
  fullName: OpenSettings.Models.License
- uid: OpenSettings.Models
  commentId: N:OpenSettings.Models
  href: OpenSettings.html
  name: OpenSettings.Models
  nameWithType: OpenSettings.Models
  fullName: OpenSettings.Models
  spec.csharp:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Models
    name: Models
    href: OpenSettings.Models.html
  spec.vb:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Models
    name: Models
    href: OpenSettings.Models.html
