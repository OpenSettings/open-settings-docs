### YamlMime:ManagedReference
items:
- uid: OpenSettings.Models.License
  commentId: T:OpenSettings.Models.License
  id: License
  parent: OpenSettings.Models
  children:
  - OpenSettings.Models.License.#ctor(System.Security.Claims.ClaimsIdentity)
  - OpenSettings.Models.License.#ctor(System.Security.Claims.ClaimsPrincipal)
  - OpenSettings.Models.License.#ctor(System.String,System.String,System.Collections.Generic.HashSet{System.String},System.Nullable{System.DateTime},System.Nullable{OpenSettings.Models.LicenseEdition},System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - OpenSettings.Models.License.CheckValidation
  - OpenSettings.Models.License.Edition
  - OpenSettings.Models.License.ExpiryDate
  - OpenSettings.Models.License.Features
  - OpenSettings.Models.License.Holder
  - OpenSettings.Models.License.IsExpired
  - OpenSettings.Models.License.IssuedAt
  - OpenSettings.Models.License.NotBefore
  - OpenSettings.Models.License.ReferenceId
  langs:
  - csharp
  - vb
  name: License
  nameWithType: License
  fullName: OpenSettings.Models.License
  type: Class
  source:
    remote:
      path: src/OpenSettings/Models/License.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: License
    path: ../../../open-settings/src/OpenSettings/Models/License.cs
    startLine: 8
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Models
  syntax:
    content: public class License
    content.vb: Public Class License
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpenSettings.Models.License.#ctor(System.String,System.String,System.Collections.Generic.HashSet{System.String},System.Nullable{System.DateTime},System.Nullable{OpenSettings.Models.LicenseEdition},System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  commentId: M:OpenSettings.Models.License.#ctor(System.String,System.String,System.Collections.Generic.HashSet{System.String},System.Nullable{System.DateTime},System.Nullable{OpenSettings.Models.LicenseEdition},System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: '#ctor(System.String,System.String,System.Collections.Generic.HashSet{System.String},System.Nullable{System.DateTime},System.Nullable{OpenSettings.Models.LicenseEdition},System.Nullable{System.DateTime},System.Nullable{System.DateTime})'
  parent: OpenSettings.Models.License
  langs:
  - csharp
  - vb
  name: License(string, string, HashSet<string>, DateTime?, LicenseEdition?, DateTime?, DateTime?)
  nameWithType: License.License(string, string, HashSet<string>, DateTime?, LicenseEdition?, DateTime?, DateTime?)
  fullName: OpenSettings.Models.License.License(string, string, System.Collections.Generic.HashSet<string>, System.DateTime?, OpenSettings.Models.LicenseEdition?, System.DateTime?, System.DateTime?)
  type: Constructor
  source:
    remote:
      path: src/OpenSettings/Models/License.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: .ctor
    path: ../../../open-settings/src/OpenSettings/Models/License.cs
    startLine: 12
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Models
  syntax:
    content: >-
      [JsonConstructor]

      public License(string holder, string referenceId, HashSet<string> features, DateTime? expiryDate, LicenseEdition? edition, DateTime? issuedAt, DateTime? notBefore)
    parameters:
    - id: holder
      type: System.String
    - id: referenceId
      type: System.String
    - id: features
      type: System.Collections.Generic.HashSet{System.String}
    - id: expiryDate
      type: System.Nullable{System.DateTime}
    - id: edition
      type: System.Nullable{OpenSettings.Models.LicenseEdition}
    - id: issuedAt
      type: System.Nullable{System.DateTime}
    - id: notBefore
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonConstructor>

      Public Sub New(holder As String, referenceId As String, features As HashSet(Of String), expiryDate As Date?, edition As LicenseEdition?, issuedAt As Date?, notBefore As Date?)
  overload: OpenSettings.Models.License.#ctor*
  attributes:
  - type: System.Text.Json.Serialization.JsonConstructorAttribute
    ctor: System.Text.Json.Serialization.JsonConstructorAttribute.#ctor
    arguments: []
  nameWithType.vb: License.New(String, String, HashSet(Of String), Date?, LicenseEdition?, Date?, Date?)
  fullName.vb: OpenSettings.Models.License.New(String, String, System.Collections.Generic.HashSet(Of String), Date?, OpenSettings.Models.LicenseEdition?, Date?, Date?)
  name.vb: New(String, String, HashSet(Of String), Date?, LicenseEdition?, Date?, Date?)
- uid: OpenSettings.Models.License.#ctor(System.Security.Claims.ClaimsIdentity)
  commentId: M:OpenSettings.Models.License.#ctor(System.Security.Claims.ClaimsIdentity)
  id: '#ctor(System.Security.Claims.ClaimsIdentity)'
  parent: OpenSettings.Models.License
  langs:
  - csharp
  - vb
  name: License(ClaimsIdentity)
  nameWithType: License.License(ClaimsIdentity)
  fullName: OpenSettings.Models.License.License(System.Security.Claims.ClaimsIdentity)
  type: Constructor
  source:
    remote:
      path: src/OpenSettings/Models/License.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: .ctor
    path: ../../../open-settings/src/OpenSettings/Models/License.cs
    startLine: 27
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Models
  syntax:
    content: public License(ClaimsIdentity claimsIdentity)
    parameters:
    - id: claimsIdentity
      type: System.Security.Claims.ClaimsIdentity
    content.vb: Public Sub New(claimsIdentity As ClaimsIdentity)
  overload: OpenSettings.Models.License.#ctor*
  nameWithType.vb: License.New(ClaimsIdentity)
  fullName.vb: OpenSettings.Models.License.New(System.Security.Claims.ClaimsIdentity)
  name.vb: New(ClaimsIdentity)
- uid: OpenSettings.Models.License.#ctor(System.Security.Claims.ClaimsPrincipal)
  commentId: M:OpenSettings.Models.License.#ctor(System.Security.Claims.ClaimsPrincipal)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal)'
  parent: OpenSettings.Models.License
  langs:
  - csharp
  - vb
  name: License(ClaimsPrincipal)
  nameWithType: License.License(ClaimsPrincipal)
  fullName: OpenSettings.Models.License.License(System.Security.Claims.ClaimsPrincipal)
  type: Constructor
  source:
    remote:
      path: src/OpenSettings/Models/License.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: .ctor
    path: ../../../open-settings/src/OpenSettings/Models/License.cs
    startLine: 29
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Models
  syntax:
    content: public License(ClaimsPrincipal claimsPrincipal)
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
    content.vb: Public Sub New(claimsPrincipal As ClaimsPrincipal)
  overload: OpenSettings.Models.License.#ctor*
  nameWithType.vb: License.New(ClaimsPrincipal)
  fullName.vb: OpenSettings.Models.License.New(System.Security.Claims.ClaimsPrincipal)
  name.vb: New(ClaimsPrincipal)
- uid: OpenSettings.Models.License.CheckValidation
  commentId: M:OpenSettings.Models.License.CheckValidation
  id: CheckValidation
  parent: OpenSettings.Models.License
  langs:
  - csharp
  - vb
  name: CheckValidation()
  nameWithType: License.CheckValidation()
  fullName: OpenSettings.Models.License.CheckValidation()
  type: Method
  source:
    remote:
      path: src/OpenSettings/Models/License.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: CheckValidation
    path: ../../../open-settings/src/OpenSettings/Models/License.cs
    startLine: 45
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Models
  syntax:
    content: public void CheckValidation()
    content.vb: Public Sub CheckValidation()
  overload: OpenSettings.Models.License.CheckValidation*
- uid: OpenSettings.Models.License.Holder
  commentId: P:OpenSettings.Models.License.Holder
  id: Holder
  parent: OpenSettings.Models.License
  langs:
  - csharp
  - vb
  name: Holder
  nameWithType: License.Holder
  fullName: OpenSettings.Models.License.Holder
  type: Property
  source:
    remote:
      path: src/OpenSettings/Models/License.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: Holder
    path: ../../../open-settings/src/OpenSettings/Models/License.cs
    startLine: 59
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Models
  syntax:
    content: public string Holder { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Holder As String
  overload: OpenSettings.Models.License.Holder*
- uid: OpenSettings.Models.License.ReferenceId
  commentId: P:OpenSettings.Models.License.ReferenceId
  id: ReferenceId
  parent: OpenSettings.Models.License
  langs:
  - csharp
  - vb
  name: ReferenceId
  nameWithType: License.ReferenceId
  fullName: OpenSettings.Models.License.ReferenceId
  type: Property
  source:
    remote:
      path: src/OpenSettings/Models/License.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: ReferenceId
    path: ../../../open-settings/src/OpenSettings/Models/License.cs
    startLine: 61
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Models
  syntax:
    content: public string ReferenceId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ReferenceId As String
  overload: OpenSettings.Models.License.ReferenceId*
- uid: OpenSettings.Models.License.Features
  commentId: P:OpenSettings.Models.License.Features
  id: Features
  parent: OpenSettings.Models.License
  langs:
  - csharp
  - vb
  name: Features
  nameWithType: License.Features
  fullName: OpenSettings.Models.License.Features
  type: Property
  source:
    remote:
      path: src/OpenSettings/Models/License.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: Features
    path: ../../../open-settings/src/OpenSettings/Models/License.cs
    startLine: 63
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Models
  syntax:
    content: public HashSet<string> Features { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.String}
    content.vb: Public ReadOnly Property Features As HashSet(Of String)
  overload: OpenSettings.Models.License.Features*
- uid: OpenSettings.Models.License.ExpiryDate
  commentId: P:OpenSettings.Models.License.ExpiryDate
  id: ExpiryDate
  parent: OpenSettings.Models.License
  langs:
  - csharp
  - vb
  name: ExpiryDate
  nameWithType: License.ExpiryDate
  fullName: OpenSettings.Models.License.ExpiryDate
  type: Property
  source:
    remote:
      path: src/OpenSettings/Models/License.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: ExpiryDate
    path: ../../../open-settings/src/OpenSettings/Models/License.cs
    startLine: 71
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Models
  summary: Gets the expiry date of the license. If the license does not expire, this property is <code>null</code>.
  example: []
  syntax:
    content: public DateTime? ExpiryDate { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public ReadOnly Property ExpiryDate As Date?
  overload: OpenSettings.Models.License.ExpiryDate*
- uid: OpenSettings.Models.License.Edition
  commentId: P:OpenSettings.Models.License.Edition
  id: Edition
  parent: OpenSettings.Models.License
  langs:
  - csharp
  - vb
  name: Edition
  nameWithType: License.Edition
  fullName: OpenSettings.Models.License.Edition
  type: Property
  source:
    remote:
      path: src/OpenSettings/Models/License.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: Edition
    path: ../../../open-settings/src/OpenSettings/Models/License.cs
    startLine: 73
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Models
  syntax:
    content: public LicenseEdition? Edition { get; }
    parameters: []
    return:
      type: System.Nullable{OpenSettings.Models.LicenseEdition}
    content.vb: Public Property Edition As LicenseEdition?
  overload: OpenSettings.Models.License.Edition*
- uid: OpenSettings.Models.License.IsExpired
  commentId: P:OpenSettings.Models.License.IsExpired
  id: IsExpired
  parent: OpenSettings.Models.License
  langs:
  - csharp
  - vb
  name: IsExpired
  nameWithType: License.IsExpired
  fullName: OpenSettings.Models.License.IsExpired
  type: Property
  source:
    remote:
      path: src/OpenSettings/Models/License.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: IsExpired
    path: ../../../open-settings/src/OpenSettings/Models/License.cs
    startLine: 75
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Models
  syntax:
    content: >-
      [JsonIgnore]

      public bool IsExpired { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property IsExpired As Boolean
  overload: OpenSettings.Models.License.IsExpired*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: OpenSettings.Models.License.IssuedAt
  commentId: P:OpenSettings.Models.License.IssuedAt
  id: IssuedAt
  parent: OpenSettings.Models.License
  langs:
  - csharp
  - vb
  name: IssuedAt
  nameWithType: License.IssuedAt
  fullName: OpenSettings.Models.License.IssuedAt
  type: Property
  source:
    remote:
      path: src/OpenSettings/Models/License.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: IssuedAt
    path: ../../../open-settings/src/OpenSettings/Models/License.cs
    startLine: 78
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Models
  syntax:
    content: public DateTime? IssuedAt { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public ReadOnly Property IssuedAt As Date?
  overload: OpenSettings.Models.License.IssuedAt*
- uid: OpenSettings.Models.License.NotBefore
  commentId: P:OpenSettings.Models.License.NotBefore
  id: NotBefore
  parent: OpenSettings.Models.License
  langs:
  - csharp
  - vb
  name: NotBefore
  nameWithType: License.NotBefore
  fullName: OpenSettings.Models.License.NotBefore
  type: Property
  source:
    remote:
      path: src/OpenSettings/Models/License.cs
      branch: master
      repo: https://github.com/OpenSettings/open-settings.git
    id: NotBefore
    path: ../../../open-settings/src/OpenSettings/Models/License.cs
    startLine: 80
  assemblies:
  - OpenSettings
  namespace: OpenSettings.Models
  syntax:
    content: public DateTime? NotBefore { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public ReadOnly Property NotBefore As Date?
  overload: OpenSettings.Models.License.NotBefore*
references:
- uid: OpenSettings.Models
  commentId: N:OpenSettings.Models
  href: OpenSettings.html
  name: OpenSettings.Models
  nameWithType: OpenSettings.Models
  fullName: OpenSettings.Models
  spec.csharp:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Models
    name: Models
    href: OpenSettings.Models.html
  spec.vb:
  - uid: OpenSettings
    name: OpenSettings
    href: OpenSettings.html
  - name: .
  - uid: OpenSettings.Models
    name: Models
    href: OpenSettings.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OpenSettings.Models.License.#ctor*
  commentId: Overload:OpenSettings.Models.License.#ctor
  href: OpenSettings.Models.License.html#OpenSettings_Models_License__ctor_System_String_System_String_System_Collections_Generic_HashSet_System_String__System_Nullable_System_DateTime__System_Nullable_OpenSettings_Models_LicenseEdition__System_Nullable_System_DateTime__System_Nullable_System_DateTime__
  name: License
  nameWithType: License.License
  fullName: OpenSettings.Models.License.License
  nameWithType.vb: License.New
  fullName.vb: OpenSettings.Models.License.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.HashSet{System.String}
  commentId: T:System.Collections.Generic.HashSet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<string>
  nameWithType: HashSet<string>
  fullName: System.Collections.Generic.HashSet<string>
  nameWithType.vb: HashSet(Of String)
  fullName.vb: System.Collections.Generic.HashSet(Of String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Nullable{OpenSettings.Models.LicenseEdition}
  commentId: T:System.Nullable{OpenSettings.Models.LicenseEdition}
  parent: System
  definition: System.Nullable`1
  href: OpenSettings.Models.LicenseEdition.html
  name: LicenseEdition?
  nameWithType: LicenseEdition?
  fullName: OpenSettings.Models.LicenseEdition?
  spec.csharp:
  - uid: OpenSettings.Models.LicenseEdition
    name: LicenseEdition
    href: OpenSettings.Models.LicenseEdition.html
  - name: '?'
  spec.vb:
  - uid: OpenSettings.Models.LicenseEdition
    name: LicenseEdition
    href: OpenSettings.Models.LicenseEdition.html
  - name: '?'
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Security.Claims.ClaimsIdentity
  commentId: T:System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.security.claims.claimsidentity
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Security
    name: Security
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security
  - name: .
  - uid: System.Security.Claims
    name: Claims
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.claims
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Security
    name: Security
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security
  - name: .
  - uid: System.Security.Claims
    name: Claims
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.claims
- uid: System.Security.Claims.ClaimsPrincipal
  commentId: T:System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.security.claims.claimsprincipal
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: OpenSettings.Models.License.CheckValidation*
  commentId: Overload:OpenSettings.Models.License.CheckValidation
  href: OpenSettings.Models.License.html#OpenSettings_Models_License_CheckValidation
  name: CheckValidation
  nameWithType: License.CheckValidation
  fullName: OpenSettings.Models.License.CheckValidation
- uid: OpenSettings.Models.License.Holder*
  commentId: Overload:OpenSettings.Models.License.Holder
  href: OpenSettings.Models.License.html#OpenSettings_Models_License_Holder
  name: Holder
  nameWithType: License.Holder
  fullName: OpenSettings.Models.License.Holder
- uid: OpenSettings.Models.License.ReferenceId*
  commentId: Overload:OpenSettings.Models.License.ReferenceId
  href: OpenSettings.Models.License.html#OpenSettings_Models_License_ReferenceId
  name: ReferenceId
  nameWithType: License.ReferenceId
  fullName: OpenSettings.Models.License.ReferenceId
- uid: OpenSettings.Models.License.Features*
  commentId: Overload:OpenSettings.Models.License.Features
  href: OpenSettings.Models.License.html#OpenSettings_Models_License_Features
  name: Features
  nameWithType: License.Features
  fullName: OpenSettings.Models.License.Features
- uid: OpenSettings.Models.License.ExpiryDate*
  commentId: Overload:OpenSettings.Models.License.ExpiryDate
  href: OpenSettings.Models.License.html#OpenSettings_Models_License_ExpiryDate
  name: ExpiryDate
  nameWithType: License.ExpiryDate
  fullName: OpenSettings.Models.License.ExpiryDate
- uid: OpenSettings.Models.License.Edition*
  commentId: Overload:OpenSettings.Models.License.Edition
  href: OpenSettings.Models.License.html#OpenSettings_Models_License_Edition
  name: Edition
  nameWithType: License.Edition
  fullName: OpenSettings.Models.License.Edition
- uid: OpenSettings.Models.License.IsExpired*
  commentId: Overload:OpenSettings.Models.License.IsExpired
  href: OpenSettings.Models.License.html#OpenSettings_Models_License_IsExpired
  name: IsExpired
  nameWithType: License.IsExpired
  fullName: OpenSettings.Models.License.IsExpired
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenSettings.Models.License.IssuedAt*
  commentId: Overload:OpenSettings.Models.License.IssuedAt
  href: OpenSettings.Models.License.html#OpenSettings_Models_License_IssuedAt
  name: IssuedAt
  nameWithType: License.IssuedAt
  fullName: OpenSettings.Models.License.IssuedAt
- uid: OpenSettings.Models.License.NotBefore*
  commentId: Overload:OpenSettings.Models.License.NotBefore
  href: OpenSettings.Models.License.html#OpenSettings_Models_License_NotBefore
  name: NotBefore
  nameWithType: License.NotBefore
  fullName: OpenSettings.Models.License.NotBefore
